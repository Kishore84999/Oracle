WITH PAYROLL AS
(
SELECT PAPF.PERSON_ID,PAY.PAYROLL_NAME
FROM PER_PERSON_SECURED_LIST_V PAPF,
PER_ASSIGNMENT_SECURED_LIST_V PAAM,
pay_rel_groups_dn payrel,
pay_assigned_payrolls_dn papd,
pay_all_payrolls_f pay

WHERE 1=1
AND PAPF.PERSON_ID=PAAM.PERSON_ID(+)
AND PAAM.ASSIGNMENT_ID = payrel.assignment_id
AND papd.payroll_term_id = payrel.parent_rel_group_id
AND papd.payroll_id = pay.payroll_id
AND :EFFECTIVE_DATE BETWEEN PAPF.EFFECTIVE_START_DATE AND PAPF.EFFECTIVE_END_DATE
AND :EFFECTIVE_DATE BETWEEN PAAM.EFFECTIVE_START_DATE AND PAAM.EFFECTIVE_END_DATE
AND :EFFECTIVE_DATE BETWEEN payrel.start_date AND payrel.end_date
AND :EFFECTIVE_DATE BETWEEN papd.start_date
                           AND NVL (papd.lspd,
                                    TO_DATE ('31/12/4712', 'DD/MM/YYYY')
                                   )
AND PAAM.PRIMARY_FLAG='Y'
AND PAAM.ASSIGNMENT_STATUS_TYPE='ACTIVE'
AND :EFFECTIVE_DATE BETWEEN pay.effective_start_date(+) AND pay.effective_end_date(+)
)

SELECT PAPF.PERSON_NUMBER,
PPNF.FULL_NAME FULL_NAME,
PPNF.FIRST_NAME,
PPNF.LAST_NAME,
PEA_WORK.EMAIL_ADDRESS,
FLVL_GEN.MEANING GENDER,
TO_CHAR(PP.DATE_OF_BIRTH,'MM/DD/YYYY') DATE_OF_BIRTH,
ROUND((SYSDATE-PP.DATE_OF_BIRTH)/365)   AGE,
PD.NAME DEPARTMENT_NAME,
PDSLV.ATTRIBUTE2 COE,
PDSLV.ATTRIBUTE3 Sub_COE,
PDSLV.ATTRIBUTE5 Organization_Group,
PDSLV.ATTRIBUTE4 Area,
PDSLV.ATTRIBUTE6 Region,
PDSLV.ATTRIBUTE7 Zone1,
PDSLV.ATTRIBUTE5 DIVISION,
PAY.PAYROLL_NAME PAYROLL,
HAOUTL.NAME BusinessUnit,
PAAM.NORMAL_HOURS WORKING_HOURS,
PAAM.WORK_AT_HOME,
--PAAM.EMPLOYEE_CATEGORY,
FLVLEMPCAT.MEANING EMPLOYEE_CATEGORY,
PAAM.ASS_ATTRIBUTE1  SHIFT_RATE,
TO_CHAR(PAAM.EFFECTIVE_START_DATE,'MM/DD/YYYY') EFFECTIVE_START_DATE,
-- PAAM.ASSIGNMENT_STATUS_TYPE,
(SELECT user_status FROM PER_ASSIGNMENT_STATUS_TYPES_tl  WHERE ASSIGNMENT_STATUS_TYPE_ID=paam.ASSIGNMENT_STATUS_TYPE_ID AND language='US' and rownum=1) AS ASSIGNMENT_STATUS_TYPE,
PARB.ACTION_REASON REASON_CODE,
PAPF_MGR.PERSON_NUMBER Supervisor_Employee_Number,
PPNF_MGR.FULL_NAME Supervisor_Name,
PJF.JOB_CODE Job_Code,
PJFTL.NAME JOB_Title,
PJF.ATTRIBUTE4 INCENTIVE_PLAN,
PJF.ATTRIBUTE_NUMBER3 BONUS_PERCENT,
PJF.ATTRIBUTE_NUMBER4 FLAT_BONUS_TARGET,
PJF.ATTRIBUTE1 MANPOWER_Acct_Number,
PJF.ATTRIBUTE2 CAR_PROGRAM,
TO_CHAR(PPOS.DATE_START,'MM/DD/YYYY') HIRE_DATE,
TO_CHAR(PPOS.ADJUSTED_SVC_DATE,'MM/DD/YYYY') ADJUSTED_SERVICE_DATE,
TO_CHAR(PPOS.PROJECTED_TERMINATION_DATE,'MM/DD/YYYY') PROJECTED_TERMINATION_DATE,
TO_CHAR(PPOS.ACTUAL_TERMINATION_DATE,'MM/DD/YYYY') ACTUAL_TERMINATION_DATE,
PJLF.INFORMATION1 OVERTIME_STATUS,
--PJF.MANAGER_LEVEL MANAGEMENT_LEVEL,
FLVLML.MEANING MANAGEMENT_LEVEL,
PGFTL.NAME GRADE_NAME,
CS.ANNUAL_SALARY   ANNUAL_SALARY,
CS.CURRENCY_CODE CURRENCY,
TO_CHAR(CS.DATE_FROM,'MM/DD/YYYY') Salary_Effective_From_Date,
round(CS.ANNUAL_SALARY/2048,2)  HOURLY_RATE,
PGF.GRADE_CODE GRADE_ID,
CSBTL.SALARY_BASIS_NAME SALARY_BASES,
CPSV.MINIMUM Minimum_of_Grade_Range,
CPSV.MID_VALUE Middle_of_Grade_Range,
CPSV.MAXIMUM Maximum_of_Grade_Range,
PARTL.ACTION_REASON SALARY_CHANGE_REASON,
PLDFTL.LOCATION_NAME,
PLDFTL.LOCATION_CODE,
PAF.COUNTRY,
PAF.REGION_2 STATE1,
FLVL_ETHNICITY.MEANING ETHNICITY,
FLVL_NATIONLITY.MEANING NATIONALITY,
FLVL_JF.MEANING JOB_FUNCTION,
FLVLME.MEANING MANAGEMENT_ENTITY,
--PJFFTL.JOB_FAMILY_NAME JOB_FAMILY,

FLVLDIS.MEANING Registered_Disabled,
FLVLVET.MEANING Veteran_Status,

PAWMF.value FTE,

(SELECT TO_CHAR(MIN(PAAMJ.effective_start_date),'MM/DD/YYYY') 
from PER_ASSIGNMENT_SECURED_LIST_V PAAMJ
where 1=1
and PAAM.ASSIGNMENT_ID = PAAMJ.ASSIGNMENT_ID
and PAAM.JOB_ID = PAAMJ.JOB_ID)        Date_Started_In_Job,
(select DISTINCT ppnfmgr1.full_name
	from PER_PERSON_NAMES_F PPNFMGR1
   WHERE 1=1
     AND ppnfmgr1.Name_type='GLOBAL'
	 AND PPNFMGR1.person_id = (select COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) 
								FROM PER_MANAGER_HRCHY_CF PMHC
								WHERE PMHC.assignment_id = paam.assignment_id
									AND PMHC.MANAGER_TYPE='LINE_MANAGER'
									AND PAAM.EFFECTIVE_START_DATE between PMHC.effective_start_date and PMHC.effective_end_date)
	and PAAM.EFFECTIVE_START_DATE between ppnfmgr1.effective_start_date and ppnfmgr1.effective_end_date) level1manager_name,             
(select DISTINCT PPNFMGR2.full_name
	from PER_PERSON_NAMES_F PPNFMGR2
   WHERE 1=1
     AND PPNFMGR2.Name_type='GLOBAL'
	 AND PPNFMGR2.person_id = (select CASE WHEN COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL11_MANAGER_ID,0) THEN LEVEL10_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL10_MANAGER_ID,0) THEN LEVEL9_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL9_MANAGER_ID,0) THEN LEVEL8_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL8_MANAGER_ID,0) THEN LEVEL7_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL7_MANAGER_ID,0) THEN LEVEL6_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL6_MANAGER_ID,0) THEN LEVEL5_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL5_MANAGER_ID,0) THEN LEVEL4_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL4_MANAGER_ID,0) THEN LEVEL3_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL3_MANAGER_ID,0) THEN LEVEL2_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL2_MANAGER_ID,0) THEN 
									LEVEL1_MANAGER_ID ELSE NULL END 
								FROM PER_MANAGER_HRCHY_CF PMHC
								WHERE PMHC.assignment_id = paam.assignment_id
									AND PMHC.MANAGER_TYPE='LINE_MANAGER'
									AND PAAM.EFFECTIVE_START_DATE between PMHC.effective_start_date and PMHC.effective_end_date)
	and PAAM.EFFECTIVE_START_DATE between PPNFMGR2.effective_start_date and PPNFMGR2.effective_end_date) level2manager_name,
(select DISTINCT PPNFMGR3.full_name
	from PER_PERSON_NAMES_F PPNFMGR3
   WHERE 1=1
     AND PPNFMGR3.Name_type='GLOBAL'
	 AND PPNFMGR3.person_id = (select CASE WHEN COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL11_MANAGER_ID,0) THEN LEVEL9_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL10_MANAGER_ID,0) THEN LEVEL8_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL9_MANAGER_ID,0) THEN LEVEL7_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL8_MANAGER_ID,0) THEN LEVEL6_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL7_MANAGER_ID,0) THEN LEVEL5_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL6_MANAGER_ID,0) THEN LEVEL4_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL5_MANAGER_ID,0) THEN LEVEL3_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL4_MANAGER_ID,0) THEN LEVEL2_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL3_MANAGER_ID,0) THEN LEVEL1_MANAGER_ID
									ELSE NULL END 
								FROM PER_MANAGER_HRCHY_CF PMHC
								WHERE PMHC.assignment_id = paam.assignment_id
									AND PMHC.MANAGER_TYPE='LINE_MANAGER'
									AND PAAM.EFFECTIVE_START_DATE between PMHC.effective_start_date and PMHC.effective_end_date)
	and PAAM.EFFECTIVE_START_DATE between PPNFMGR3.effective_start_date and PPNFMGR3.effective_end_date) level3manager_name,
(select DISTINCT PPNFMGR4.full_name
	from PER_PERSON_NAMES_F PPNFMGR4
   WHERE 1=1
     AND PPNFMGR4.Name_type='GLOBAL'
	 AND PPNFMGR4.person_id = (select CASE WHEN COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL11_MANAGER_ID,0) THEN LEVEL8_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL10_MANAGER_ID,0) THEN LEVEL7_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL9_MANAGER_ID,0) THEN LEVEL6_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL8_MANAGER_ID,0) THEN LEVEL5_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL7_MANAGER_ID,0) THEN LEVEL4_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL6_MANAGER_ID,0) THEN LEVEL3_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL5_MANAGER_ID,0) THEN LEVEL2_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL4_MANAGER_ID,0) THEN LEVEL1_MANAGER_ID
									ELSE NULL END 
								FROM PER_MANAGER_HRCHY_CF PMHC
								WHERE PMHC.assignment_id = paam.assignment_id
									AND PMHC.MANAGER_TYPE='LINE_MANAGER'
									AND PAAM.EFFECTIVE_START_DATE between PMHC.effective_start_date and PMHC.effective_end_date)
	and PAAM.EFFECTIVE_START_DATE between PPNFMGR4.effective_start_date and PPNFMGR4.effective_end_date) level4manager_name,
(select DISTINCT PPNFMGR5.full_name
	from PER_PERSON_NAMES_F PPNFMGR5
   WHERE 1=1
     AND PPNFMGR5.Name_type='GLOBAL'
	 AND PPNFMGR5.person_id = (select CASE WHEN COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL11_MANAGER_ID,0) THEN LEVEL7_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL10_MANAGER_ID,0) THEN LEVEL6_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL9_MANAGER_ID,0) THEN LEVEL5_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL8_MANAGER_ID,0) THEN LEVEL4_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL7_MANAGER_ID,0) THEN LEVEL3_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL6_MANAGER_ID,0) THEN LEVEL2_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL5_MANAGER_ID,0) THEN LEVEL1_MANAGER_ID
									ELSE NULL END 
								FROM PER_MANAGER_HRCHY_CF PMHC
								WHERE PMHC.assignment_id = paam.assignment_id
									AND PMHC.MANAGER_TYPE='LINE_MANAGER'
									AND PAAM.EFFECTIVE_START_DATE between PMHC.effective_start_date and PMHC.effective_end_date)
	and PAAM.EFFECTIVE_START_DATE between PPNFMGR5.effective_start_date and PPNFMGR5.effective_end_date) level5manager_name,
(select DISTINCT PPNFMGR6.full_name
	from PER_PERSON_NAMES_F PPNFMGR6
   WHERE 1=1
     AND PPNFMGR6.Name_type='GLOBAL'
	 AND PPNFMGR6.person_id = (select CASE WHEN COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL11_MANAGER_ID,0) THEN LEVEL6_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL10_MANAGER_ID,0) THEN LEVEL5_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL9_MANAGER_ID,0) THEN LEVEL4_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL8_MANAGER_ID,0) THEN LEVEL3_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL7_MANAGER_ID,0) THEN LEVEL2_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL6_MANAGER_ID,0) THEN LEVEL1_MANAGER_ID
									ELSE NULL END 
								FROM PER_MANAGER_HRCHY_CF PMHC
								WHERE PMHC.assignment_id = paam.assignment_id
									AND PMHC.MANAGER_TYPE='LINE_MANAGER'
									AND PAAM.EFFECTIVE_START_DATE between PMHC.effective_start_date and PMHC.effective_end_date)
	and PAAM.EFFECTIVE_START_DATE between PPNFMGR6.effective_start_date and PPNFMGR6.effective_end_date) level6manager_name,
(select DISTINCT PPNFMGR7.full_name
	from PER_PERSON_NAMES_F PPNFMGR7
   WHERE 1=1
     AND PPNFMGR7.Name_type='GLOBAL'
	 AND PPNFMGR7.person_id = (select CASE WHEN COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL11_MANAGER_ID,0) THEN LEVEL5_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL10_MANAGER_ID,0) THEN LEVEL4_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL9_MANAGER_ID,0) THEN LEVEL3_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL8_MANAGER_ID,0) THEN LEVEL2_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL7_MANAGER_ID,0) THEN LEVEL1_MANAGER_ID
									ELSE NULL END
								FROM PER_MANAGER_HRCHY_CF PMHC
								WHERE PMHC.assignment_id = paam.assignment_id
									AND PMHC.MANAGER_TYPE='LINE_MANAGER'
									AND PAAM.EFFECTIVE_START_DATE between PMHC.effective_start_date and PMHC.effective_end_date)
	and PAAM.EFFECTIVE_START_DATE between PPNFMGR7.effective_start_date and PPNFMGR7.effective_end_date) level7manager_name,
(select DISTINCT PPNFMGR8.full_name
	from PER_PERSON_NAMES_F PPNFMGR8
   WHERE 1=1
     AND PPNFMGR8.Name_type='GLOBAL'
	 AND PPNFMGR8.person_id = (select CASE WHEN COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL11_MANAGER_ID,0) THEN LEVEL4_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL10_MANAGER_ID,0) THEN LEVEL3_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL9_MANAGER_ID,0) THEN LEVEL2_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL8_MANAGER_ID,0) THEN LEVEL1_MANAGER_ID
									ELSE NULL END
								FROM PER_MANAGER_HRCHY_CF PMHC
								WHERE PMHC.assignment_id = paam.assignment_id
									AND PMHC.MANAGER_TYPE='LINE_MANAGER'
									AND PAAM.EFFECTIVE_START_DATE between PMHC.effective_start_date and PMHC.effective_end_date)
	and PAAM.EFFECTIVE_START_DATE between PPNFMGR8.effective_start_date and PPNFMGR8.effective_end_date) level8manager_name,
(select DISTINCT PPNFMGR9.full_name
	from PER_PERSON_NAMES_F PPNFMGR9
   WHERE 1=1
     AND PPNFMGR9.Name_type='GLOBAL'
	 AND PPNFMGR9.person_id = (select CASE WHEN COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL11_MANAGER_ID,0) THEN LEVEL3_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL10_MANAGER_ID,0) THEN LEVEL2_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL9_MANAGER_ID,0) THEN LEVEL1_MANAGER_ID
									ELSE NULL END
								FROM PER_MANAGER_HRCHY_CF PMHC
								WHERE PMHC.assignment_id = paam.assignment_id
									AND PMHC.MANAGER_TYPE='LINE_MANAGER'
									AND PAAM.EFFECTIVE_START_DATE between PMHC.effective_start_date and PMHC.effective_end_date)
	and PAAM.EFFECTIVE_START_DATE between PPNFMGR9.effective_start_date and PPNFMGR9.effective_end_date) level9manager_name,
(select DISTINCT PPNFMGR10.full_name
	from PER_PERSON_NAMES_F PPNFMGR10
   WHERE 1=1
     AND PPNFMGR10.Name_type='GLOBAL'
	 AND PPNFMGR10.person_id = (select CASE WHEN COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL11_MANAGER_ID,0) THEN LEVEL2_MANAGER_ID
									WHEN  COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL10_MANAGER_ID,0) THEN LEVEL1_MANAGER_ID
									ELSE NULL END
								FROM PER_MANAGER_HRCHY_CF PMHC
								WHERE PMHC.assignment_id = paam.assignment_id
									AND PMHC.MANAGER_TYPE='LINE_MANAGER'
									AND PAAM.EFFECTIVE_START_DATE between PMHC.effective_start_date and PMHC.effective_end_date)
	and PAAM.EFFECTIVE_START_DATE between PPNFMGR10.effective_start_date and PPNFMGR10.effective_end_date) level10manager_name,
(select DISTINCT PPNFMGR11.full_name
	from PER_PERSON_NAMES_F PPNFMGR11
   WHERE 1=1
     AND PPNFMGR11.Name_type='GLOBAL'
	 AND PPNFMGR11.person_id = (select CASE WHEN COALESCE(LEVEL11_MANAGER_ID, LEVEL10_MANAGER_ID, LEVEL9_MANAGER_ID, LEVEL8_MANAGER_ID, LEVEL7_MANAGER_ID, LEVEL6_MANAGER_ID, 
									LEVEL5_MANAGER_ID, LEVEL4_MANAGER_ID, LEVEL3_MANAGER_ID, LEVEL2_MANAGER_ID, LEVEL1_MANAGER_ID) = NVL(LEVEL11_MANAGER_ID,0) THEN LEVEL1_MANAGER_ID
									ELSE NULL END
								FROM PER_MANAGER_HRCHY_CF PMHC
								WHERE PMHC.assignment_id = paam.assignment_id
									AND PMHC.MANAGER_TYPE='LINE_MANAGER'
									AND PAAM.EFFECTIVE_START_DATE between PMHC.effective_start_date and PMHC.effective_end_date)
	and PAAM.EFFECTIVE_START_DATE between PPNFMGR11.effective_start_date and PPNFMGR11.effective_end_date) level11manager_name,

(SELECT   
	HOUTL1.NAME 
	FROM 
hr_organization_information_f HOIF,
hr_organization_units_f_tl HOUTL1

WHERE 1=1
AND PAAM.UNION_ID=HOIF.ORGANIZATION_ID
AND HOIF.ORGANIZATION_ID=HOUTL1.ORGANIZATION_ID
AND HOIF.ORG_INFORMATION_CONTEXT='ORA_PER_UNION_ADDITIONAL_INFORMATION'
AND HOUTL1.LANGUAGE='US'
and paam.effective_start_date between HOIF.effective_start_date and HOIF.effective_end_date 
and paam.effective_start_date between HOUTL1.effective_start_date and HOUTL1.effective_end_date 	
	) UNIONNAME,

(select 

PEEVF.SCREEN_ENTRY_VALUE 
from 
PAY_ELEMENT_ENTRIES_F PEEF,
PAY_ELEMENT_ENTRY_VALUES_F PEEVF,
PAY_INPUT_VALUES_F PIVF,
PAY_ELEMENT_TYPES_F PETF 

WHERE 1=1
AND PAAM.PERSON_ID = PEEF.PERSON_ID
AND PEEVF.ELEMENT_ENTRY_ID = PEEF.ELEMENT_ENTRY_ID
AND PIVF.INPUT_VALUE_ID = PEEVF.INPUT_VALUE_ID
AND PEEF.ELEMENT_TYPE_ID = PETF.ELEMENT_TYPE_ID
AND PIVF.BASE_NAME='Amount'
AND PETF.BASE_ELEMENT_NAME='Lead Pay'
AND PAAM.EFFECTIVE_START_DATE between PEEF.effective_start_date and PEEF.effective_end_date
AND PAAM.EFFECTIVE_START_DATE between PEEVF.effective_start_date and PEEVF.effective_end_date
AND PAAM.EFFECTIVE_START_DATE between PIVF.effective_start_date and PIVF.effective_end_date
AND PAAM.EFFECTIVE_START_DATE between PETF.effective_start_date and PETF.effective_end_date
) LEAD_RATE,
PPNFAOR.FULL_NAME AORNAME,

(select DISTINCT
PJFFTL.JOB_FAMILY_NAME

FROM 
PER_JOBS_F PJF,
PER_JOB_FAMILY_F_TL PJFFTL

WHERE 1=1
AND PAAM.JOB_ID=PJF.JOB_ID
AND PJF.JOB_FAMILY_ID=PJFFTL.JOB_FAMILY_ID
AND PAAM.PRIMARY_FLAG='Y'
AND PAAM.ASSIGNMENT_STATUS_TYPE='ACTIVE'
AND PJFFTL.LANGUAGE='US'
AND PAAM.EFFECTIVE_START_DATE between PJF.effective_start_date and PJF.effective_end_date  
AND PAAM.EFFECTIVE_START_DATE between PJFFTL.effective_start_date and PJFFTL.effective_end_date  



 )JOB_FAMILY,
 TO_CHAR(paam.DATE_PROBATION_END , 'MM/DD/YYYY') AS "DATE_PROBATION_END",
 PJF.ATTRIBUTE16 SALARY_PRIME_ACCT ,
 PJF.ATTRIBUTE_NUMBER2 SUB_ACCOUNT,
 (SELECT FLV.MEANING FROM FND_LOOKUP_VALUES FLV 
			                WHERE FLV.LOOKUP_TYPE ='MAR_STATUS' 
							AND FLV.LOOKUP_CODE=PPLF.MARITAL_STATUS
							and FLV.LANGUAGE='US'
							AND ROWNUM=1) AS "MARITAL_STATUS",
ROUND((SYSDATE-PPOS.DATE_START)/365,2)	years_exp		,
to_char(CS.salary_amount) AMOUNT  ,
TO_CHAR(cs.date_from, 'MM/DD/YYYY') SALARY_START_DATE,
CS.ADJUSTMENT_AMOUNT LAST_CHANGE_AMOUNT,
CS.ADJUSTMENT_PERCENT LAST_CHANGE_PERCENTAGE,
CS.ADJUSTMENT_PERCENT ANNUAL_CG_PERCE_AMNT,
CS.ADJUSTMENT_AMOUNT*12 	ANNUAL_CHANGE_AMOUNT,
-- to_char(cs_old.salary_amount) OLD_DATA,
-- TO_CHAR(cs.creation_date, 'MM/DD/YYYY') CHANGED_DATE		
NVL((SELECT
 peai.EXT_IDENTIFIER_NUMBER
   FROM
PER_EXT_APP_IDENTIFIERS peai
where peai.person_id =papf.person_id
and peai.EXT_IDENTIFIER_TYPE='ORA_3RD_PARTY_PAY_ID'
and sysdate between NVL(peai.DATE_FROM,sysdate-1) and NVL(peai.DATE_TO,SYSDATE+1)
and rownum=1),papf.person_number)  Legacy_Employee_Id			

FROM PER_PERSON_SECURED_LIST_V PAPF,
PER_ASSIGNMENT_SECURED_LIST_V PAAM,
PER_PERSON_NAMES_F PPNF,
PER_DEPARTMENTS PD,
PER_DEPARTMENT_SECURED_LIST_V PDSLV,
PAYROLL PAY,
PER_EMAIL_ADDRESSES  PEA_WORK,
PER_PERIODS_OF_SERVICE  PPOS,
FND_LOOKUP_VALUES_VL    FLVL_GEN,
PER_PEOPLE_LEGISLATIVE_F   PPLF,
PER_PERSONS   PP,
HR_ALL_ORGANIZATION_UNITS_F_VL HAOUF,
HR_ALL_ORGANIZATION_UNITS_F HAOUF1,
HR_ORGANIZATION_UNITS_F_TL HAOUTL,
HR_ORG_UNIT_CLASSIFICATIONS_F HOUCF,
PER_GRADES_F PGF,
CMP_SALARY  CS,
PER_GRADES_F_TL PGFTL,
CMP_SALARY_BASES_TL  CSBTL,
CMP_PRE_SALARY_V CPSV,

PER_ASSIGNMENT_SUPERVISORS_F   PASF,
PER_PERSON_SECURED_LIST_V    PAPF_MGR,
PER_PERSON_NAMES_F  PPNF_MGR,
PER_JOBS PJ,
PER_JOBS_F    PJF,
PER_JOBS_F_TL   PJFTL,
PER_ACTION_REASONS_TL PARTL,
PER_ACTION_OCCURRENCES PAO,
PER_ACTION_REASONS_TL PARB,
PER_ASSIGN_WORK_MEASURES_F PAWMF,
PER_LOCATION_DETAILS_F  PLDF,
PER_LOCATION_DETAILS_F_TL  PLDFTL,
PER_JOB_LEG_F PJLF,
PER_ADDRESSES_F   PAF,
PER_ETHNICITIES PE,
FND_LOOKUP_VALUES_VL FLVL_ETHNICITY,
PER_CITIZENSHIPS_ PC,
FND_LOOKUP_VALUES_VL FLVL_NATIONLITY,
FND_LOOKUP_VALUES_VL  FLVL_JF,
FND_LOOKUP_VALUES_VL FLVLDIS,
FND_LOOKUP_VALUES_VL FLVLME,
PER_DISABILITIES_F PDISF,
PER_PEOPLE_LEGISLATIVE_F_V PPLF1,
FND_LOOKUP_VALUES_VL FLVLVET,
FND_LOOKUP_VALUES_VL FLVLML,
FND_LOOKUP_VALUES_VL FLVLEMPCAT,
HR_ORGANIZATION_INFORMATION_F HOIFAOR,
PER_PERSON_NAMES_F PPNFAOR




WHERE 1=1 
AND PAPF.PERSON_ID=PAAM.PERSON_ID
AND PAAM.PERSON_ID=PPNF.PERSON_ID
AND PAAM.ORGANIZATION_ID= PD.ORGANIZATION_ID(+)
AND PD.STATUS(+) = 'A'
AND PD.ORGANIZATION_ID=PDSLV.ORGANIZATION_ID(+)
AND PAAM.PERSON_ID=PAY.PERSON_ID(+)
AND PAPF.PERSON_ID=PP.PERSON_ID(+)
AND PAPF.person_id = pplf.person_id(+)

AND HAOUF.ORGANIZATION_ID=HAOUF1.ORGANIZATION_ID
AND HAOUF1.ORGANIZATION_ID = PAAM.BUSINESS_UNIT_ID
AND HAOUF1.ORGANIZATION_ID = HAOUTL.ORGANIZATION_ID 
AND HAOUF1.ORGANIZATION_ID = HOUCF.ORGANIZATION_ID
AND PAAM.ASSIGNMENT_ID = CS.ASSIGNMENT_ID(+)
-- AND CS.ASSIGNMENT_ID = CS_OLD.ASSIGNMENT_ID
-- AND CS.DATE_FROM= CS_OLD.DATE_TO+1
AND CS.GRADE_ID = PGFTL.GRADE_ID(+)
AND PGFTL.language(+) = 'US'
AND PGFTL.GRADE_ID=PGF.GRADE_ID(+)
AND paam.effective_start_date between PGFTL.effective_start_date(+) and PGFTL.effective_end_date(+)
AND paam.effective_start_date between PGF.effective_start_date(+) and PGF.effective_end_date(+)
AND CS.SALARY_BASIS_ID = CSBTL.SALARY_BASIS_ID(+)
AND CS.SALARY_ID=CPSV.SALARY_ID(+)
AND CSBTL.language(+) = 'US'


AND PAAM.ASSIGNMENT_ID = PASF.ASSIGNMENT_ID(+)
AND PASF.manager_id = PAPF_MGR.person_id(+)
AND PAPF_MGR.person_id = PPNF_MGR.person_id(+)
AND PAAM.JOB_ID=PJ.JOB_ID(+)
AND PJ.job_id=PJF.JOB_ID(+)
AND PJF.job_id = PJFTL.job_id(+)
AND PAAM.PERIOD_OF_SERVICE_ID = PPOS.PERIOD_OF_SERVICE_ID
AND CS.ACTION_REASON_ID=PARTL.ACTION_REASON_ID(+)
AND PARTL.language(+) = 'US'
AND PAAM.ASSIGNMENT_ID = PAWMF.ASSIGNMENT_ID(+)
AND PAWMF.unit(+) = 'FTE'
AND PLDF.lOCATION_ID=PAAM.LOCATION_ID
AND PLDF.LOCATION_DETAILS_ID = PLDFTL.LOCATION_DETAILS_ID(+)
AND PLDF.MAIN_ADDRESS_ID = PAF.ADDRESS_ID(+)
AND PJF.JOB_ID=PJLF.JOB_ID(+)
AND PJLF.INFORMATION_CATEGORY(+)='HRX_US_JOBS'
AND PJLF.legislation_code(+)=	'US'
AND PAAM.ACTION_OCCURRENCE_ID=PAO.ACTION_OCCURRENCE_ID(+)
AND PARB.ACTION_REASON_ID=PAO.ACTION_REASON_ID
AND PARB.LANGUAGE='US'
AND PAPF.PERSON_ID=PE.PERSON_ID(+)
AND PE.ETHNICITY =FLVL_ETHNICITY.LOOKUP_CODE(+)
AND FLVL_ETHNICITY.LOOKUP_TYPE(+)='PER_ETHNICITY'
AND PAPF.PERSON_ID=PC.PERSON_ID(+)
AND PC.LEGISLATION_CODE=FLVL_NATIONLITY.LOOKUP_CODE(+)
AND FLVL_NATIONLITY.LOOKUP_TYPE(+)='NATIONALITY'
AND PJF.JOB_FUNCTION_CODE =FLVL_JF.LOOKUP_CODE(+)
AND FLVL_JF.LOOKUP_TYPE(+) = 'JOB_FUNCTION_CODE'
AND PJF.MANAGER_LEVEL=FLVLME.LOOKUP_CODE(+)
AND FLVLME.LOOKUP_TYPE(+)='MANAGER_LEVEL'
AND PP.PERSON_ID=PPLF1.PERSON_ID(+)
AND PPLF1.PER_INFORMATION14=FLVLVET.LOOKUP_CODE(+)
AND FLVLVET.LOOKUP_TYPE(+)='ORA_HRX_US_VETS_SELFID_STATUS'
AND PJF.MANAGER_LEVEL=FLVLML.LOOKUP_CODE(+)
AND FLVLML.LOOKUP_TYPE(+)='MANAGER_LEVEL'
AND PAAM.EMPLOYMENT_CATEGORY=FLVLEMPCAT.LOOKUP_CODE(+)
AND FLVLEMPCAT.LOOKUP_TYPE(+)='EMP_CAT'



AND PAPF.PERSON_ID=PDISF.PERSON_ID(+)

AND PPNF_MGR.name_type(+) = 'GLOBAL'
AND PASF.MANAGER_TYPE(+) = 'LINE_MANAGER'
AND PJFTL.language = 'US'
AND HAOUTL.LANGUAGE = 'US'
AND PLDFTL.language='US'
AND HOUCF.CLASSIFICATION_CODE = 'FUN_BUSINESS_UNIT'
AND HAOUTL.EFFECTIVE_START_DATE = HAOUF1.EFFECTIVE_START_DATE 
AND HAOUTL.EFFECTIVE_END_DATE = HAOUF1.EFFECTIVE_END_DATE  
AND PAAM.PRIMARY_FLAG='Y'
AND PDISF.CATEGORY=FLVLDIS.LOOKUP_CODE(+)
AND FLVLDIS.lookup_type (+) = 'DISABILITY_CATEGORY'
--AND PGFTL.LANGUAGE='US'
--AND PGF.ACTIVE_STATUS='A'
AND PD.STATUS(+) = 'A'
AND PPLF.SEX = FLVL_GEN.LOOKUP_CODE(+)
AND FLVL_GEN.lookup_type(+) = 'SEX'

AND PPNF.NAME_TYPE = 'GLOBAL'
AND (PAAM.assignment_status_type in( 'ACTIVE','SUSPENDED'))
AND PAAM.ASSIGNMENT_TYPE='E'
AND paam.EFFECTIVE_LATEST_CHANGE = 'Y'
AND PAAM.PERSON_ID = PEA_WORK.person_id(+)
AND PEA_WORK.email_type(+) = 'W1'

AND PAAM.ORGANIZATION_ID=HOIFAOR.ORGANIZATION_ID
and HOIFAOR.ORG_INFORMATION_CONTEXT = 'PER_ORG_MANAGER_INFO'
and PPNFAOR.NAME_TYPE = 'GLOBAL'
and HOIFAOR.ORG_INFORMATION2 = PPNFAOR.person_id
AND PPNFAOR.NAME_TYPE='GLOBAL'

AND :EFFECTIVE_DATE BETWEEN PAPF.EFFECTIVE_START_DATE AND PAPF.EFFECTIVE_END_DATE
AND :EFFECTIVE_DATE BETWEEN PAAM.EFFECTIVE_START_DATE AND PAAM.EFFECTIVE_END_DATE
AND :EFFECTIVE_DATE BETWEEN PPNF.EFFECTIVE_START_DATE AND PPNF.EFFECTIVE_END_DATE
AND :EFFECTIVE_DATE BETWEEN PPNFAOR.EFFECTIVE_START_DATE AND PPNFAOR.EFFECTIVE_END_DATE
AND :EFFECTIVE_DATE BETWEEN PD.EFFECTIVE_START_DATE(+) AND PD.EFFECTIVE_END_DATE(+)
AND :EFFECTIVE_DATE BETWEEN PDSLV.EFFECTIVE_START_DATE(+) AND PDSLV.EFFECTIVE_END_DATE(+)
AND :EFFECTIVE_DATE BETWEEN PPLF.EFFECTIVE_START_DATE(+) AND PPLF.EFFECTIVE_END_DATE(+)
AND :EFFECTIVE_DATE BETWEEN HAOUF.EFFECTIVE_START_DATE(+) AND HAOUF.EFFECTIVE_END_DATE(+)
AND :EFFECTIVE_DATE BETWEEN HAOUTL.EFFECTIVE_START_DATE AND HAOUTL.EFFECTIVE_END_DATE
AND :EFFECTIVE_DATE BETWEEN HOUCF.EFFECTIVE_START_DATE AND HOUCF.EFFECTIVE_END_DATE
AND :EFFECTIVE_DATE BETWEEN HAOUF1.EFFECTIVE_START_DATE(+) AND HAOUF1.EFFECTIVE_END_DATE(+)
AND :EFFECTIVE_DATE BETWEEN CS.DATE_FROM(+) AND CS.DATE_TO(+)
AND :EFFECTIVE_DATE BETWEEN CPSV.DATE_FROM(+) AND CPSV.DATE_TO(+)
AND :EFFECTIVE_DATE BETWEEN PJF.EFFECTIVE_START_DATE(+) AND PJF.EFFECTIVE_END_DATE(+)
AND :EFFECTIVE_DATE BETWEEN PJFTL.EFFECTIVE_START_DATE(+) AND PJFTL.EFFECTIVE_END_DATE(+)
AND :EFFECTIVE_DATE BETWEEN PASF.EFFECTIVE_START_DATE(+) AND PASF.EFFECTIVE_END_DATE(+)
AND :EFFECTIVE_DATE BETWEEN PAPF_MGR.EFFECTIVE_START_DATE(+) AND PAPF_MGR.EFFECTIVE_END_DATE(+)
AND :EFFECTIVE_DATE BETWEEN PPNF_MGR.EFFECTIVE_START_DATE(+) AND PPNF_MGR.EFFECTIVE_END_DATE(+)
AND :EFFECTIVE_DATE BETWEEN PAWMF.EFFECTIVE_START_DATE(+) and PAWMF.EFFECTIVE_END_DATE(+)
AND :EFFECTIVE_DATE BETWEEN PLDF.EFFECTIVE_START_DATE(+) AND  PLDF.EFFECTIVE_END_DATE(+)
AND :EFFECTIVE_DATE BETWEEN PAF.EFFECTIVE_START_DATE(+) AND  PAF.EFFECTIVE_END_DATE(+)
AND :EFFECTIVE_DATE BETWEEN PLDFTL.EFFECTIVE_START_DATE(+) AND  PLDFTL.EFFECTIVE_END_DATE(+)
AND :EFFECTIVE_DATE BETWEEN PJLF.EFFECTIVE_START_DATE(+) AND  PJLF.EFFECTIVE_END_DATE(+)
--AND paam.effective_start_date BETWEEN PJFF.EFFECTIVE_START_DATE(+) AND PJFF.EFFECTIVE_END_DATE(+)
--AND paam.effective_start_date BETWEEN PJFFTL.EFFECTIVE_START_DATE(+) AND PJFFTL.EFFECTIVE_END_DATE(+)
AND :EFFECTIVE_DATE BETWEEN PDISF.EFFECTIVE_START_DATE(+) AND  PDISF.EFFECTIVE_END_DATE(+)
AND :EFFECTIVE_DATE BETWEEN PPLF1.EFFECTIVE_START_DATE(+) AND  PPLF1.EFFECTIVE_END_DATE(+)
AND :EFFECTIVE_DATE BETWEEN PC.DATE_FROM(+) and PC.DATE_TO(+)