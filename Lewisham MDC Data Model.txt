SELECT ALL_LAST.PERSON_ID,
ALL_LAST.ASSIGNMENT_ID,
ALL_LAST.ASSIGNMENT_NUMBER,
ALL_LAST.CON_CHECK,
ALL_LAST.CON_COUNT,
ALL_LAST.TOTAL_DAYS,
ALL_LAST.M_DAYS,
ALL_LAST.divi,
M_e_DATE-M_S_DATE+1  total_days1,
(case when (select upper(trim(max(SEGMENT4))) from per_people_groups ppg,per_all_assignments_m paaf where 
	ppg.people_group_id=paaf.people_group_id
	and paaf.assignment_id=all_last.assignment_id
	AND TRUNC(all_last.start_date) BETWEEN paaf.EFFECTIVE_START_DATE AND paaf.EFFECTIVE_END_DATE
	and paaf.effective_latest_change='Y'
	and paaf.assignment_type='E'
	) in (upper(trim('Casual Payment (Hourly Rate)')),upper(trim('CASUAL PAYMENT (SPINAL SCALE)')),upper(trim('Casual Payment (Spot Rate)')), upper(trim('Casual Payment (No Rate Held)')))
	then 
	(
		SELECT  
		(case when CEIL(round((nvl(PRVF.VALUE,0)),2))-round((nvl(PRVF.VALUE,0)),2)<.50 then CEIL(round((nvl(PRVF.VALUE,0)),2))
			else floor(round((nvl(PRVF.VALUE,0)),2))	end)
			
		
               FROM
                   PER_GRADE_STEPS_F_VL PGSF,
                   PER_ASSIGN_GRADE_STEPS_F PAGF,    
								   
				   PER_RATES_F_VL PRFVL,
				   PER_RATE_VALUES_F PRVF
               WHERE
                   PAGF.ASSIGNMENT_ID = all_last.ASSIGNMENT_ID
                   AND   PAGF.GRADE_STEP_ID = PGSF.GRADE_STEP_ID
                   AND   TRUNC(all_last.start_date) BETWEEN NVL(PGSF.EFFECTIVE_START_DATE(+),all_last.start_date) AND NVL(PGSF.EFFECTIVE_END_DATE(+),all_last.start_date)
                   AND   TRUNC(all_last.start_date) BETWEEN NVL(PAGF.EFFECTIVE_START_DATE(+),all_last.start_date) AND NVL(PAGF.EFFECTIVE_END_DATE(+),all_last.start_date)

                            AND PRVF.RATE_ID = PRFVL.RATE_ID
                            AND PRVF.RATE_OBJECT_ID    = PGSF.GRADE_STEP_ID
                     AND TRUNC(all_last.start_date) BETWEEN PRVF.EFFECTIVE_START_DATE AND PRVF.EFFECTIVE_END_DATE
                     AND TRUNC(all_last.start_date) BETWEEN PRFVL.EFFECTIVE_START_DATE AND PRFVL.EFFECTIVE_END_DATE
                   AND   (PAGF.LAST_UPDATE_DATE IS NULL OR PAGF.LAST_UPDATE_DATE =
                           (SELECT MAX(PAGF1.LAST_UPDATE_DATE)
                           FROM PER_ASSIGN_GRADE_STEPS_F PAGF1
                           WHERE PAGF.ASSIGNMENT_ID = PAGF1.ASSIGNMENT_ID
                    AND TRUNC(all_last.start_date) BETWEEN NVL(PAGF1.EFFECTIVE_START_DATE(+),all_last.start_date) AND NVL(PAGF1.EFFECTIVE_END_DATE(+),all_last.start_date))))
else sum(case when TRUNC(all_last.START_DATE) BETWEEN TRUNC(payroll_run.start_date) AND TRUNC(payroll_run.end_Date) then payroll_run.salary_amount else 0 end)
end)
 annual_sal,

(SELECT TRIM(REGEXP_REPLACE(UPPER(SUBSTR(upper(PAAF1.ASS_ATTRIBUTE4),1,INSTR(UPPER(PAAF1.ASS_ATTRIBUTE4),UPPER('HRS'),1,1)-1)),'[A-Z]','')) FROM 
PER_ALL_ASSIGNMENTS_M PAAF1
WHERE PAAF1.ASSIGNMENT_ID=ALL_LAST.ASSIGNMENT_ID
AND PAAF1.EFFECTIVE_LATEST_CHANGE='Y'
AND TRUNC(ALL_LAST.START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE)
)
con,
(case when ALL_LAST.ft_pt=0 then 
(NVL
((SELECT COUNT(DISTINCT APAPE.START_DATE)
			
			FROM ANC_PER_ABS_PLAN_ENTRIES APAPE,
			ANC_ABSENCE_PLANS_VL AAPV
			
			WHERE APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID
			AND APAPE.PERSON_ID=ALL_LAST.PERSON_ID
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('Occupational Sick Plan-Teachers')),
			UPPER(TRIM('Occupational Maternity Plan')),upper(trim('Occupational Industry Injury Plan-Teachers'))
			,upper(trim('Occupational Paternity-Adoption Plan'))
			,upper(trim('Occupational Adoption Leave'))
			,upper(trim('Occupational Paternity-Birth Plan'))
			,upper(trim('Shared Parental Leave-Birth'))
			,upper(trim('Shared Parental Leave-Adoption'))
			,upper(trim('LBL Unpaid Leave Plan'))) 
			AND ABSENCE_PAY_FACTOR=0 			
			AND PAY_FACTOR_WITHOUT_OVERRIDE=0 
			AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(ALL_LAST.START_DATE) AND TRUNC(ALL_LAST.END_DATE)
			--,UPPER(TRIM('STATUTORY MATERNITY PLAN')))
),0)			
-- +
-- NVL(TRUNC((( SELECT SUM(ABS_UNITS)
-- FROM
-- (SELECT MAX(ABS_UNITS) ABS_UNITS

			
			-- FROM ANC_PER_ABS_PLAN_ENTRIES APAPE,
			-- ANC_PER_ABS_ENTRIES APAE,
			-- ANC_ABSENCE_TYPES_F_TL AATFL
			
			-- WHERE APAPE.PERSON_ID=ALL_LAST.PERSON_ID
			-- AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
			-- AND APAPE.ABS_UNITS<>0
			-- AND APAE.PERSON_ID=APAPE.PERSON_ID
			-- AND APAE.ABSENCE_TYPE_ID=AATFL.ABSENCE_TYPE_ID
			-- AND AATFL.LANGUAGE=USERENV('LANG')
			-- AND AATFL.SOURCE_LANG=USERENV('LANG')
			-- AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(AATFL.EFFECTIVE_START_DATE) AND TRUNC(AATFL.EFFECTIVE_END_DATE)
			-- AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
			-- AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(ALL_LAST.START_DATE) AND TRUNC(ALL_LAST.END_DATE)
			-- AND UPPER(TRIM(AATFL.NAME)) IN (UPPER(TRIM('Emergency Leave Unpaid')),
			-- UPPER(TRIM('Public Duty Unpaid')),
			-- UPPER(TRIM('Special Leave Unpaid')),
			-- UPPER(TRIM('UNPAID LEAVE')))
-- -- UPPER(TRIM('SUSPENSION WITH PAY')),
-- -- UPPER(TRIM('TIME OFF IN LEIU')))

-- GROUP BY APAPE.START_DATE,APAPE.PERSON_ID
			-- --,UPPER(TRIM('STATUTORY MATERNITY PLAN')))
			-- --GROUP BY APAPE.START_DATE
-- ))/
-- (
-- (CASE WHEN 
-- (TO_NUMBER((SELECT TRIM(REGEXP_REPLACE(UPPER(SUBSTR(upper(PAAF1.ASS_ATTRIBUTE4),1,INSTR(UPPER(PAAF1.ASS_ATTRIBUTE4),UPPER('HRS'),1,1)-1)),'[A-Z]','')) FROM 
-- PER_ALL_ASSIGNMENTS_M PAAF1
-- WHERE PAAF1.ASSIGNMENT_ID=ALL_LAST.ASSIGNMENT_ID
-- AND PAAF1.EFFECTIVE_LATEST_CHANGE='Y'
-- AND TRUNC(ALL_LAST.START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE)
-- ),'9G999D99') IS NULL OR 
-- TO_NUMBER((SELECT TRIM(REGEXP_REPLACE(UPPER(SUBSTR(upper(PAAF1.ASS_ATTRIBUTE4),1,INSTR(UPPER(PAAF1.ASS_ATTRIBUTE4),UPPER('HRS'),1,1)-1)),'[A-Z]','')) FROM 
-- PER_ALL_ASSIGNMENTS_M PAAF1
-- WHERE PAAF1.ASSIGNMENT_ID=ALL_LAST.ASSIGNMENT_ID
-- AND PAAF1.EFFECTIVE_LATEST_CHANGE='Y'
-- AND TRUNC(ALL_LAST.START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE)
-- ),'9G999D99') = 0) THEN 1 
-- ELSE TO_NUMBER((SELECT TRIM(REGEXP_REPLACE(UPPER(SUBSTR(upper(PAAF1.ASS_ATTRIBUTE4),1,INSTR(UPPER(PAAF1.ASS_ATTRIBUTE4),UPPER('HRS'),1,1)-1)),'[A-Z]','')) FROM 
-- PER_ALL_ASSIGNMENTS_M PAAF1
-- WHERE PAAF1.ASSIGNMENT_ID=ALL_LAST.ASSIGNMENT_ID
-- AND PAAF1.EFFECTIVE_LATEST_CHANGE='Y'
-- AND TRUNC(ALL_LAST.START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE)
-- ),'9G999D99') 
-- END)

-- /5)
-- ) ),0)
)
else 
(NVL
((SELECT COUNT(DISTINCT APAPE.START_DATE)
			
			FROM ANC_PER_ABS_PLAN_ENTRIES APAPE,
			ANC_ABSENCE_PLANS_VL AAPV
			
			WHERE APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID
			AND APAPE.PERSON_ID=ALL_LAST.PERSON_ID
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('Occupational Sick Plan-Teachers')),
			UPPER(TRIM('Occupational Maternity Plan')),upper(trim('Occupational Industry Injury Plan-Teachers'))
			,upper(trim('Occupational Paternity-Adoption Plan'))
			,upper(trim('Occupational Adoption Leave'))
			,upper(trim('Occupational Paternity-Birth Plan'))
			,upper(trim('Shared Parental Leave-Birth'))
			,upper(trim('Shared Parental Leave-Adoption'))
			,upper(trim('LBL Unpaid Leave Plan')))
			AND ABSENCE_PAY_FACTOR=0 			
			AND PAY_FACTOR_WITHOUT_OVERRIDE=0 
			AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(ALL_LAST.START_DATE) AND TRUNC(ALL_LAST.END_DATE)
			--,UPPER(TRIM('STATUTORY MATERNITY PLAN')))
),0)			
-- +
-- NVL(TRUNC((( SELECT c_days
-- FROM
-- (SELECT  COUNT(DISTINCT APAPE.START_DATE) c_days
			

			
			-- FROM ANC_PER_ABS_PLAN_ENTRIES APAPE,
			-- ANC_PER_ABS_ENTRIES APAE,
			-- ANC_ABSENCE_TYPES_F_TL AATFL
			
			-- WHERE APAPE.PERSON_ID=ALL_LAST.PERSON_ID
			-- AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
			-- --AND APAPE.ABS_UNITS<>0
			-- AND APAE.PERSON_ID=APAPE.PERSON_ID
			-- AND APAE.ABSENCE_TYPE_ID=AATFL.ABSENCE_TYPE_ID
			-- AND AATFL.LANGUAGE=USERENV('LANG')
			-- AND AATFL.SOURCE_LANG=USERENV('LANG')
			-- AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(AATFL.EFFECTIVE_START_DATE) AND TRUNC(AATFL.EFFECTIVE_END_DATE)
			-- AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
			-- AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(ALL_LAST.START_DATE) AND TRUNC(ALL_LAST.END_DATE)
			-- AND UPPER(TRIM(AATFL.NAME)) IN (UPPER(TRIM('Emergency Leave Unpaid')),
			-- UPPER(TRIM('Public Duty Unpaid')),
			-- UPPER(TRIM('Special Leave Unpaid')),
			-- UPPER(TRIM('UNPAID LEAVE')))

-- --GROUP BY APAPE.START_DATE,APAPE.PERSON_ID
			-- --,UPPER(TRIM('STATUTORY MATERNITY PLAN')))
			-- --GROUP BY APAPE.START_DATE
-- ))
-- ) ),0)
)
end)DAYS_EXCLUDED,
ALL_LAST.start_date,
ALL_LAST.end_Date,
ALL_LAST.M_S_DATE,
ALL_LAST.M_E_DATE,
ALL_LAST.ASSIGNMENT_STATUS_TYPE,
ALL_LAST.ADD_UPDATE,
ALL_LAST.loc,
ALL_LAST.last_name,
ALL_LAST.first_name,
case when upper(con_cond)=upper('yes') then ALL_LAST.ESTABLISHMENT_NUMBER
-- '0953' 
else ALL_LAST.ESTABLISHMENT_NUMBER end  ESTABLISHMENT_NUMBER,
ALL_LAST.NATIONAL_IDENTIFIER_NUMBER,
REPLACE(ALL_LAST.DFE_NUMBER,'/', NULL) DFE_NUMBER,
ALL_LAST.DATE_OF_BIRTH,
ALL_LAST.LOCAL_AUTH_NUMBER,
ALL_LAST.EMPLOYEEEMAIL,
ALL_LAST.HOME_ADDRESS_LINE_1,
ALL_LAST.HOME_ADDRESS_LINE_2,
ALL_LAST.HOME_ADDRESS_LINE_3,
ALL_LAST.HOME_ADDRESS_LINE_4,
ALL_LAST.HOME_ADDRESS_LINE_5,
ALL_LAST.ACTUAL_TERMINATION_DATE,
ALL_LAST.GENDER,
ALL_LAST.gender_code,
ALL_LAST.FULL_PART_TIME,
ALL_LAST.WITHDRAWN_STATUS,
ALL_LAST.WITHDRAWN_COND,
ALL_LAST.POSTAL_CODE,
--D_EXC,
ALL_LAST.SS_DATE,
ALL_LAST.EE_DATE,
ALL_LAST.FT_PT,
ALL_LAST.con_cond

FROM
(SELECT 
ALL_CON.con_check,
(count(CON_CHECK) over (partition by CON_CHECK order by CON_CHECK)) con_count,
total_days,
m_days,
divi,
start_date,
end_Date,
M_S_DATE,
M_E_DATE,
ASSIGNMENT_STATUS_TYPE,
ADD_UPDATE,
loc,
ALL_CON.PERSON_ID,
PAAF_NEW.A_ID,
initcap(case when (count(CON_CHECK) over (partition by CON_CHECK order by CON_CHECK))=PAAF_NEW.A_ID  and (count(CON_CHECK) over (partition by CON_CHECK order by CON_CHECK))>1 then 'yes'
else 'no' end) as con_cond,
(case when (count(CON_CHECK) over (partition by CON_CHECK order by CON_CHECK))=PAAF_NEW.A_ID  and (count(CON_CHECK) over (partition by CON_CHECK order by CON_CHECK))>1 then 
(select paam.assignment_id
from per_all_assignments_m paam
where paam.person_id=all_con.person_id
AND paam.assignment_id=all_con.assignment_id  -- hinal 
and trunc(all_con.start_date) between trunc(paam.effective_start_date) and trunc(paam.effective_end_date)
and upper(paam.primary_flag)=upper('y')
and upper(paam.effective_latest_change)=upper('y')
) 
else all_con.assignment_id end) ASSIGNMENT_ID,

(case when (count(CON_CHECK) over (partition by CON_CHECK order by CON_CHECK))=PAAF_NEW.A_ID  and (count(CON_CHECK) over (partition by CON_CHECK order by CON_CHECK))>1 then 
(select assignment_number
from per_all_assignments_m paam
where paam.person_id=all_con.person_id
AND paam.assignment_id=all_con.assignment_id -- hinal
and trunc(all_con.start_date) between trunc(paam.effective_start_date) and trunc(paam.effective_end_date)
and upper(paam.primary_flag)=upper('y')
and upper(paam.effective_latest_change)=upper('y')
) 
else all_con.assignment_number end) ASSIGNMENT_number,
last_name,
first_name,
ESTABLISHMENT_NUMBER,
NATIONAL_IDENTIFIER_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
LOCAL_AUTH_NUMBER,
EMPLOYEEEMAIL,
HOME_ADDRESS_LINE_1,
HOME_ADDRESS_LINE_2,
HOME_ADDRESS_LINE_3,
HOME_ADDRESS_LINE_4,
HOME_ADDRESS_LINE_5,
ACTUAL_TERMINATION_DATE,
GENDER,
gender_code,
FULL_PART_TIME,
WITHDRAWN_STATUS,
WITHDRAWN_COND,
POSTAL_CODE,
D_EXC,
SS_DATE,
EE_DATE,
(case when (count(CON_CHECK) over (partition by CON_CHECK order by CON_CHECK))=PAAF_NEW.A_ID  and (count(CON_CHECK) over (partition by CON_CHECK order by CON_CHECK))>1 then 
7
else 
(SELECT	  
		   (CASE 
		   WHEN paam.normal_hours=0 then 8
		   WHEN round(pawm.value,2)=1 then 0
		   WHEN round(pawm.value,2) < 1 then 7
		   
		   END)
        FROM
            per_assign_work_measures_f pawm,
			per_all_assignments_m paam
        WHERE
            paam.assignment_id=pawm.assignment_id
			and pawm.unit = 'FTE'
			and all_coN.start_date
			between trunc(paam.effective_start_date) and trunc(paam.effective_end_date)
			and upper(paam.assignment_type)=upper('E')
			and upper(paam.effective_latest_change)=upper('y')
			-- AND ASSIGNMENT_NUMBER LIKE '%T00046%' 
			and paam.assignment_id=all_con.assignment_id
			and paam.person_id=all_con.person_id
			AND all_coN.start_date 
			BETWEEN trunc(pawm.EFFECTIVE_START_DATE) AND trunc(pawm.EFFECTIVE_END_DATE))
		
 end)
		
FT_PT
--SALARY_AMOUNT


FROM
(
select all_final.*,
 person_id||'_'||start_date||'_'||end_date||'_'||ESTABLISHMENT_NUMBER CON_CHECK,
(case when to_char(start_date,'mm')='04' and to_number(to_char(start_date,'dd'),'99') between 1 and 5 then 5
when to_char(start_date,'mm')='04' and to_number(to_char(start_date,'dd'),'99') between 6 and 30 then 25
else M_e_DATE-M_S_DATE+1 end)
total_days,
(case when trunc(start_date)=trunc(hire_date) then M_e_DATE-M_S_DATE+1
when trunc(end_Date)=trunc(actual_termination_date) then M_e_DATE-M_S_DATE+1
else end_date-START_DATE+1 end) m_days,
((case when trunc(start_date)=trunc(hire_date) then M_e_DATE-M_S_DATE+1
when trunc(end_Date)=trunc(actual_termination_date) then M_e_DATE-M_S_DATE+1
else end_date-START_DATE+1 end)/(M_e_DATE-M_S_DATE+1)) DIVI

from
(SELECT 
ppos.hire_date,
ALL_COMBINE.ADD_UPDATE,
ALL_COMBINE.LOC,
ALL_COMBINE.PERSON_ID,
ALL_COMBINE.ASSIGNMENT_ID,
ALL_COMBINE.ASSIGNMENT_NUMBER,

(select ppnf.last_name
from per_person_names_f ppnf
where trunc(all_combine.start_date) between trunc(ppnf.effective_start_date) and trunc(ppnf.effective_end_date)
and ppnf.person_id=all_combine.person_id
and upper(ppnf.name_type)=upper('global')
) LAST_NAME,

(select ppnf.first_name
from per_person_names_f ppnf
where trunc(all_combine.start_date) between trunc(ppnf.effective_start_date) and trunc(ppnf.effective_end_date)
and ppnf.person_id=all_combine.person_id
and upper(ppnf.name_type)=upper('global')
) FIRST_NAME,

(select LPAD(PLDF.ATTRIBUTE_NUMBER1 ,4,'0')
from PER_LOCATION_DETAILS_F_VL pldf,
per_all_assignments_m paam
where PLDF.LOCATION_ID(+)=paam.LOCATION_ID
and paam.assignment_id=all_combine.assignment_id
and upper(paam.assignment_type) = upper('e')
and upper(paam.effective_latest_change)=upper('y')
AND TRUNC(all_combine.start_date) BETWEEN TRUNC(PAAM.EFFECTIVE_START_DATE) AND TRUNC(PAAM.EFFECTIVE_END_DATE)
AND TRUNC(all_combine.start_date) BETWEEN TRUNC(NVL(PLDF.EFFECTIVE_START_DATE,paam.EFFECTIVE_START_DATE)) AND TRUNC(NVL(PLDF.EFFECTIVE_END_DATE,paam.EFFECTIVE_START_DATE))
) ESTABLISHMENT_NUMBER,

(select pni.NATIONAL_IDENTIFIER_NUMBER
from PER_NATIONAL_IDENTIFIERS PNI
where pni.person_id=all_combine.person_id
AND TRUNC(all_combine.start_date) BETWEEN TRUNC(NVL(PNI.ISSUE_DATE,all_combine.start_date)) AND TRUNC(NVL(PNI.EXPIRATION_DATE,all_combine.start_date)))
NATIONAL_IDENTIFIER_NUMBER,

ALL_COMBINE.DFE_NUMBER,
ALL_COMBINE.DATE_OF_BIRTH,
ALL_COMBINE.LOCAL_AUTH_NUMBER,
-- nvl((SELECT PEA.EMAIL_ADDRESS FROM PER_EMAIL_ADDRESSES PEA
	-- WHERE all_combine.PERSON_ID = PEA.PERSON_ID
	-- AND UPPER(PEA.EMAIL_TYPE(+)) = 'H1'
	-- AND TRUNC(all_combine.start_date) BETWEEN TRUNC(NVL(PEA.DATE_FROM,all_combine.start_date)) AND TRUNC(NVL(PEA.DATE_TO,all_combine.start_date)))
	-- ,
-- (SELECT PEA.EMAIL_ADDRESS FROM PER_EMAIL_ADDRESSES PEA
	-- WHERE all_combine.PERSON_ID = PEA.PERSON_ID
	-- AND UPPER(PEA.EMAIL_TYPE(+)) = 'W1'
	-- AND TRUNC(all_combine.start_date) BETWEEN TRUNC(NVL(PEA.DATE_FROM,all_combine.start_date)) AND TRUNC(NVL(PEA.DATE_TO,all_combine.start_date)))
-- )
NVL((SELECT (PEA.EMAIL_ADDRESS) FROM PER_EMAIL_ADDRESSES PEA,per_all_people_f papf
WHERE ALL_COMBINE.PERSON_ID = PEA.PERSON_ID
and papf.person_id=pea.person_id
and pea.email_address_id=papf.primary_email_id
AND UPPER(PEA.EMAIL_TYPE) = 'H1'
AND TRUNC(ALL_COMBINE.START_DATE) BETWEEN TRUNC(NVL(PEA.DATE_FROM,ALL_COMBINE.START_DATE)) AND TRUNC(NVL(PEA.DATE_TO,ALL_COMBINE.START_DATE))
AND TRUNC(ALL_COMBINE.START_DATE) BETWEEN TRUNC(NVL(papf.EFFECTIVE_START_DATE,ALL_COMBINE.START_DATE)) AND TRUNC(NVL(papf.EFFECTIVE_END_DATE,ALL_COMBINE.START_DATE))
)
,
(SELECT (PEA.EMAIL_ADDRESS) FROM PER_EMAIL_ADDRESSES PEA,per_all_people_f papf
WHERE ALL_COMBINE.PERSON_ID = PEA.PERSON_ID
and papf.person_id=pea.person_id
and pea.email_address_id=papf.primary_email_id
AND UPPER(PEA.EMAIL_TYPE) = 'W1'
AND TRUNC(ALL_COMBINE.START_DATE) BETWEEN TRUNC(NVL(PEA.DATE_FROM,ALL_COMBINE.START_DATE)) AND TRUNC(NVL(PEA.DATE_TO,ALL_COMBINE.START_DATE))
AND TRUNC(ALL_COMBINE.START_DATE) BETWEEN TRUNC(NVL(papf.EFFECTIVE_START_DATE,ALL_COMBINE.START_DATE)) AND TRUNC(NVL(papf.EFFECTIVE_END_DATE,ALL_COMBINE.START_DATE))
)
)
EMPLOYEEEMAIL,
address.HOME_ADDRESS_LINE_1 HOME_ADDRESS_LINE_1,
address.HOME_ADDRESS_LINE_2 HOME_ADDRESS_LINE_2,
address.HOME_ADDRESS_LINE_3 HOME_ADDRESS_LINE_3,
address.HOME_ADDRESS_LINE_4 HOME_ADDRESS_LINE_4,
address.HOME_ADDRESS_LINE_5 HOME_ADDRESS_LINE_5,
ALL_COMBINE.ACTUAL_TERMINATION_DATE,
gender.GENDER,
gender.GENDER_CODE,
ALL_COMBINE.FULL_PART_TIME,
(CASE WHEN ACTUAL_TERMINATION_DATE BETWEEN START_DATE AND MIN(ALL_COMBINE.END_DATE) THEN 'W'
WHEN (select NVL((DECODE(paam.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paam.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paam.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
from per_all_assignments_m paam
where paam.assignment_id=all_combine.assignment_id
and upper(paam.assignment_type) = upper('e')
and upper(paam.effective_latest_change)=upper('y')
AND TRUNC(all_combine.start_date) BETWEEN TRUNC(PAAM.EFFECTIVE_START_DATE) AND TRUNC(PAAM.EFFECTIVE_END_DATE)
) IN ('END','TERMINATE ASSIGNMENT') THEN 'W'
ELSE '' END ) WITHDRAWN_STATUS,


(CASE WHEN ACTUAL_TERMINATION_DATE BETWEEN START_DATE AND MIN(ALL_COMBINE.END_DATE) THEN ACTUAL_TERMINATION_DATE
WHEN (select NVL((DECODE(paam.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paam.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paam.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
from per_all_assignments_m paam
where paam.assignment_id=all_combine.assignment_id
and upper(paam.assignment_type) = upper('e')
and upper(paam.effective_latest_change)=upper('y')
AND TRUNC(all_combine.start_date) BETWEEN TRUNC(PAAM.EFFECTIVE_START_DATE) AND TRUNC(PAAM.EFFECTIVE_END_DATE)
) IN ('END','TERMINATE ASSIGNMENT') THEN 

(SELECT MIN(PAAM2.EFFECTIVE_START_DATE)
FROM per_all_assignments_m PAAM2
WHERE paam2.assignment_id=all_combine.assignment_id
and upper(paam2.assignment_type) = upper('e')
and upper(paam2.effective_latest_change)=upper('y')
AND (NVL((DECODE(paam2.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paam2.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paam2.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT',''))) IN ('END','TERMINATE ASSIGNMENT'))
)

  END ) WITHDRAWN_COND,

REPLACE(address.POSTAL_CODE,',','') POSTAL_CODE,
ALL_COMBINE.D_EXC,
ALL_COMBINE.M_S_DATE,
ALL_COMBINE.M_E_DATE,
ALL_COMBINE.START_DATE,
MIN(ALL_COMBINE.END_DATE) END_DATE,
ALL_COMBINE.SS_DATE,
ALL_COMBINE.EE_DATE,
MAX(CASE WHEN all_combine.SALARY_AMOUNT=0 
THEN (SELECT SAL.SALARY_AMOUNT
FROM CMP_SALARY SAL
WHERE SAL.PERSON_ID=all_combine.PERSON_ID
AND SAL.ASSIGNMENT_ID=all_combine.ASSIGNMENT_ID
AND TRUNC(START_DATE) BETWEEN TRUNC(DATE_FROM) AND TRUNC(DATE_TO))
ELSE SALARY_AMOUNT
END)  SALARY_AMOUNT,
ALL_COMBINE.CON_TYPE,
ALL_COMBINE.ASSIGNMENT_STATUS_TYPE


FROM
(
SELECT 
COMBINED.ADD_UPDATE,
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC,
COMBINED.PERSON_ID,
COMBINED.ASSIGNMENT_ID,
COMBINED.ASSIGNMENT_NUMBER,
COMBINED.DFE_NUMBER,
COMBINED.DATE_OF_BIRTH,
-- (select PLDF.ATTRIBUTE4
-- from PER_LOCATION_DETAILS_F_VL pldf,
-- per_all_assignments_m paam
-- where PLDF.LOCATION_ID(+)=paam.LOCATION_ID
-- and paam.assignment_id=combined.assignment_id
-- and upper(paam.assignment_type) = upper('e')
-- and upper(paam.effective_latest_change)=upper('y')
-- AND TRUNC(sysdate) BETWEEN TRUNC(PAAM.EFFECTIVE_START_DATE) AND TRUNC(PAAM.EFFECTIVE_END_DATE)
-- AND TRUNC(sysdate) BETWEEN TRUNC(NVL(PLDF.EFFECTIVE_START_DATE,paam.EFFECTIVE_START_DATE)) AND TRUNC(NVL(PLDF.EFFECTIVE_END_DATE,paam.EFFECTIVE_START_DATE))
-- )
'209' LOCAL_AUTH_NUMBER,
COMBINED.ACTUAL_TERMINATION_DATE,
COMBINED.FULL_PART_TIME,
COMBINED.WITHDRAWN_STATUS,
COMBINED.D_EXC,
COMBINED.M_S_DATE,
COMBINED.M_E_DATE,
COMBINED.START_DATE,
(COMBINED.END_DATE) END_DATE,
COMBINED.SS_DATE,
COMBINED.EE_DATE,
COMBINED.ASSIGNMENT_STATUS_TYPE,
COMBINED.SALARY_AMOUNT,
(TO_NUMBER((SELECT TRIM(REGEXP_REPLACE(UPPER(SUBSTR(PAAF1.ASS_ATTRIBUTE4,1,INSTR(UPPER(PAAF1.ASS_ATTRIBUTE4),UPPER('HRS'),1,1)-1)),'[A-Z]','')) FROM 
PER_ALL_ASSIGNMENTS_M PAAF1
WHERE PAAF1.ASSIGNMENT_ID=COMBINED.ASSIGNMENT_ID
AND PAAF1.EFFECTIVE_LATEST_CHANGE='Y'
AND TRUNC(START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE)
),'9G999D99')/5) CON_TYPE,
TRUNC(LAG(END_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE)) COND_E_DATE

 FROM 
(
(SELECT 
ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
--NORMAL_HOURS,
FULL_PART_TIME,
WITHDRAWN_STATUS,
D_EXC,
M_S_DATE,
M_E_DATE,
START_DATE,

(CASE  
WHEN (LEAD(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE)) IS NULL AND LAST_DAY(START_DATE)<ACTUAL_TERMINATION_DATE
THEN LAST_DAY(START_DATE)
WHEN (LEAD(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE)) IS NULL AND LAST_DAY(START_DATE)>ACTUAL_TERMINATION_DATE
THEN ACTUAL_TERMINATION_DATE
WHEN LAST_DAY(START_DATE)>ACTUAL_TERMINATION_DATE
THEN ACTUAL_TERMINATION_DATE
WHEN TRUNC((LEAD(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE)-1),'MONTH')=TRUNC(START_DATE,'MONTH')
THEN (LEAD(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE)-1)
ELSE LAST_DAY(START_DATE)
  END ) END_DATE,
--(CASE WHEN END_DATE>EE_DATE THEN EE_DATE ELSE END_DATE END) END_DATE,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE/* ,
N_S_DATE,
P_S_DATE,
N_E_DATE,
P_E_DATE,
S_DATE,
E_DATE */
FROM

(SELECT ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
''  WITHDRAWN_STATUS,
0 D_EXC,
TRUNC(START_DATE,'MONTH') M_S_DATE,
LAST_DAY(START_DATE) M_E_DATE,
START_DATE S_DATE,
END_DATE E_DATE,
LEAD(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE ) N_S_DATE,
LAG(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE )  P_S_DATE,
LEAD(END_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE)    N_E_DATE,
LAG(END_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE)     P_E_DATE,

(CASE WHEN LAG(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE ) IS NULL AND 
LAG(END_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE) IS NULL THEN START_DATE

WHEN LEAD(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE ) IS NULL THEN START_DATE

WHEN LAG(END_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE)+1 =START_DATE THEN START_DATE
WHEN TRUNC((LAG(END_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE)+1),'MONTH')<>TRUNC(START_DATE,'MONTH') THEN START_DATE 
ELSE LAG(END_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE)+1 END) START_DATE,

/*  NVL((CASE WHEN LAG(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE ) IS NULL AND 
LAG(END_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE) IS NULL THEN END_DATE
 
WHEN TRUNC(LEAD(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE ))-1 =END_DATE THEN END_DATE

 WHEN TRUNC((LEAD(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE ))-1) < TRUNC(END_DATE,'MONTH') THEN END_DATE 
WHEN TRUNC(LEAD(START_DATE,2) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE ))-1 <=
TRUNC(LEAD(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE ))-1
THEN TRUNC(LEAD(START_DATE,2) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE ))-1 
ELSE TRUNC(LEAD(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE ))-1 END),END_DATE) END_DATE, */

SYSDATE END_DATE,


/* (CASE WHEN LAG(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE ) IS NULL AND 
LAG(END_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE) IS NULL THEN START_DATE

WHEN START_DATE=LEAD(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE )  THEN START_DATE

ELSE TRUNC(LAG(END_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE))+1 END) START_DATE, */



/* (CASE WHEN LAG(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE ) IS NULL AND 
LAG(END_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE) IS NULL THEN END_DATE

WHEN START_DATE=LEAD(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE ) THEN 
LAG(END_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE) ELSE
LEAD(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE )-1 END) END_DATE, */


SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE

FROM

(SELECT ALL_COM.* FROM
(
(SELECT 'ASG_ADD' DESCR,
'A' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN SS_DATE
ELSE MIN(EFFECTIVE_START_DATE) END) START_DATE,

(CASE WHEN ACTUAL_TERMINATION_DATE BETWEEN  SS_DATE AND EE_DATE THEN ACTUAL_TERMINATION_DATE ELSE
(CASE WHEN MAX(EFFECTIVE_END_DATE)>EE_DATE THEN EE_DATE
ELSE MAX(EFFECTIVE_END_DATE) END) END) END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE


FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
PAAF.EFFECTIVE_START_DATE,
PAAF.EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
0 SALARY_AMOUNT,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+5
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) SS_DATE,

(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) EE_DATE

FROM DUAL)
PAY_PERIOD

where PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
----AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
						AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE)
						)
						
--AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
AND ((SS_DATE BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE))
OR (EE_DATE BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE))
OR (SS_DATE<TRUNC(PAAF.EFFECTIVE_START_DATE)
AND EE_DATE>TRUNC(PAAF.EFFECTIVE_END_DATE)) 
)
AND (PPOS.ACTUAL_TERMINATION_DATE IS NULL OR  TRUNC(PPOS.ACTUAL_TERMINATION_DATE)>SS_DATE)
AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)


 )

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
)
union
(SELECT 'ELE_ADD' DESCR,
'A' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
MIN(EFFECTIVE_START_DATE) START_DATE,
MAX(EFFECTIVE_END_DATE) END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE


FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
/* (case when ELEMENT.START_DATE<ss_Date then ss_date
when ELEMENT.START_DATE between ss_date and ee_date then ELEMENT.START_DATE
end) */
(case when ELEMENT.START_DATE<ss_Date then ss_date else ELEMENT.START_DATE
end) EFFECTIVE_START_DATE,

TRUNC((case when ELEMENT.end_date between ss_date and ee_date then ELEMENT.end_date
end)) EFFECTIVE_END_DATE,

PAAF.NORMAL_HOURS,
FULL_PART_TIME,
ELEMENT.SALARY_AMOUNT SALARY_AMOUNT,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+5
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) SS_DATE,

(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) EE_DATE

FROM DUAL)
PAY_PERIOD,
(
SELECT
(CASE WHEN prr.PAYROLL_ASSIGNMENT_ID IS NOT NULL THEN PAAF.ASSIGNMENT_ID ELSE 
(SELECT PAAF1.ASSIGNMENT_ID
FROM PER_ALL_ASSIGNMENTS_F PAAF1
WHERE PAAF1.PERSON_ID=PAAF.PERSON_ID
AND UPPER(TRIM(PAAF1.PRIMARY_FLAG))=upper(trim('Y'))
AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE)
) END) ASSIGNMENT_ID,
(case when Subtract_or_Add='ADD' then to_number(prrv.result_value,'999999.99') else prrv.result_value*(-1) end) salary_amount,
TRUNC(nvl(prr.START_DATE,ptp.start_date)) start_date,
TRUNC(nvl(prr.end_date,ptp.end_date)) end_date,
pett.element_name,
pivt.name,
ppa.last_update_date

       FROM PAY_PAYROLL_ACTIONS PPA,
                           PAY_PAYROLL_REL_ACTIONS PPRA,
                           PAY_PAYROLL_ASSIGNMENTS PPACT,
                           PAY_INPUT_VALUES_TL PIVT,
                           PAY_INPUT_VALUES_F PIVF,
                           PAY_ELEMENT_TYPES_F PETF,
                           PAY_ELEMENT_TYPES_TL PETT,
                           PAY_RUN_RESULTS PRR,
                           PAY_RUN_RESULT_VALUES PRRV,
						   PAY_TIME_PERIODS PTP,
						   PAY_ALL_PAYROLLS_F PAF,
						   PER_ALL_ASSIGNMENTS_F PAAF,
						   (SELECT 
								pbt.balance_type_id,
								pbt.balance_name,
								DECODE (pbf.scale,  1, 'ADD',  -1, 'SUBTRACT',  NULL) Subtract_or_Add,
								pivf.name input_value,
								petf.element_name,
								pbt.legislation_code
								FROM 
								pay_balance_types_vl pbt,
									PAY_INPUT_VALUES_vL pivf,
									PAY_ELEMENT_TYPES_vL petf,
								pay_balance_feeds_f pbf,
								PER_LEGISLATIVE_DATA_GROUPS_VL LDG
								WHERE PBF.BALANCE_TYPE_ID=PBT.BALANCE_TYPE_ID   
								--1=1
								AND NVL (PBF.LEGISLATION_CODE, LDG.LEGISLATION_CODE) =
								LDG.LEGISLATION_CODE
								AND NVL (PBF.LEGISLATIVE_DATA_GROUP_ID, LDG.LEGISLATIVE_DATA_GROUP_ID) =
								LDG.LEGISLATIVE_DATA_GROUP_ID
									AND UPPER(TRIM(LDG.legislation_code)) = 'GB'
								AND pbf.element_type_id = petf.element_type_id(+)
								AND pbf.input_value_id = pivf.input_value_id(+)	
								AND LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) BETWEEN NVL(pbf.effective_start_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))) AND NVL(pbf.effective_end_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')))
								AND LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) BETWEEN NVL(pivf.effective_start_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))) AND NVL(pivf.effective_end_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')))
								AND LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) BETWEEN NVL(petf.effective_start_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))) AND NVL(petf.effective_end_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')))
								AND upper(pbt.balance_name) = 'TPA SALARY'
								--and upper(pivf.name)<>upper('Basic_Annual')
								ORDER BY pbt.balance_name
						   )
						   b_e_list
						   
                     WHERE   TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PPACT.START_DATE) AND TRUNC(PPACT.END_DATE)
					        AND PRRV.RUN_RESULT_ID = PRR.RUN_RESULT_ID
                           AND PIVF.INPUT_VALUE_ID = PRRV.INPUT_VALUE_ID
                           AND PRR.ELEMENT_TYPE_ID = PETT.ELEMENT_TYPE_ID
                           AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PETF.EFFECTIVE_START_DATE) AND TRUNC(PETF.EFFECTIVE_END_DATE)
                           AND PETT.LANGUAGE = USERENV('LANG')
						    AND PETT.SOURCE_LANG = USERENV('LANG')
                           AND PETT.ELEMENT_TYPE_ID = PETF.ELEMENT_TYPE_ID
                           AND PIVF.INPUT_VALUE_ID = PIVT.INPUT_VALUE_ID
                           AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PIVF.EFFECTIVE_START_DATE) AND TRUNC(PIVF.EFFECTIVE_END_DATE)
                           AND PIVT.LANGUAGE = USERENV('LANG')
						   AND PIVT.SOURCE_LANG = USERENV('LANG')
                          AND PIVF.ELEMENT_TYPE_ID = PETF.ELEMENT_TYPE_ID
                           AND PRR.PAYROLL_REL_ACTION_ID =
                                  PPRA.PAYROLL_REL_ACTION_ID
                           AND PPA.PAYROLL_ACTION_ID = PPRA.PAYROLL_ACTION_ID
						  AND PPRA.PAYROLL_RELATIONSHIP_ID=PPACT.PAYROLL_RELATIONSHIP_ID
						AND NVL(PRR.PAYROLL_ASSIGNMENT_ID,PPACT.PAYROLL_ASSIGNMENT_ID)=PPACT.PAYROLL_ASSIGNMENT_ID
						AND NVL(PRR.PAYROLL_TERM_ID,PPACT.PAYROLL_TERM_ID)=PPACT.PAYROLL_TERM_ID
						AND PAAF.ASSIGNMENT_ID=PPACT.HR_ASSIGNMENT_ID
						AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
                           AND PPRA.RETRO_COMPONENT_ID IS NULL
						   AND PTP.PAYROLL_ID=PPA.PAYROLL_ID
						   AND PTP.TIME_PERIOD_ID=PPA.EARN_TIME_PERIOD_ID
						   AND PTP.PERIOD_CATEGORY='E'
						   AND PAF.PAYROLL_ID = PPA.PAYROLL_ID
						   AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PAF.EFFECTIVE_START_DATE) AND TRUNC(PAF.EFFECTIVE_END_DATE)
						   AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PTP.START_DATE) AND TRUNC(PTP.END_DATE)
					      and PETT.element_name in (b_e_list.element_name)
						   AND UPPER(TRIM(PRR.STATUS))=UPPER(TRIM('P'))
						   and ptp.start_date=(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
						   and ptp.end_date=last_day((TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')))
						   AND PIVT.NAME in (b_e_list.input_value)
						   AND prr.START_DATE IS NOT NULL 
						   AND prr.END_DATE IS NOT NULL
)
ELEMENT



where PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
							AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
AND TRUNC(ELEMENT.START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
AND ((SS_DATE BETWEEN TRUNC(ELEMENT.START_DATE) AND TRUNC(ELEMENT.end_DATE))
OR (EE_DATE BETWEEN TRUNC(ELEMENT.START_DATE) AND TRUNC(ELEMENT.end_DATE))
)
AND ELEMENT.ASSIGNMENT_ID=PAAF.ASSIGNMENT_ID

AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)
)

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
)
UNION
(SELECT 'LEAVE_ADD' DESCR,
'A' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
MIN(EFFECTIVE_START_DATE) START_DATE,
MAX(EFFECTIVE_END_DATE) END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE


FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
/* (case when APAE.START_DATE<ss_Date then ss_date
when APAE.START_DATE between ss_date and ee_date then APAE.START_DATE
end) */
(CASE WHEN TO_CHAR((case when APAE.START_DATE<ss_Date then ss_date
when APAE.START_DATE between ss_date and ee_date then APAE.START_DATE
end),'MM')='04' THEN TRUNC(((case when APAE.START_DATE<ss_Date then ss_date
when APAE.START_DATE between ss_date and ee_date then APAE.START_DATE
end)),'MONTH')+5
ELSE TRUNC(((case when APAE.START_DATE<ss_Date then ss_date
when APAE.START_DATE between ss_date and ee_date then APAE.START_DATE
end)),'MONTH') END) EFFECTIVE_START_DATE,

TRUNC((case when APAE.START_DATE<ss_Date then ss_date
when APAE.START_DATE between ss_date and ee_date then APAE.START_DATE
end))-1 EFFECTIVE_END_DATE,

PAAF.NORMAL_HOURS,
FULL_PART_TIME,
0 SALARY_AMOUNT,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+5
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) SS_DATE,

(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) EE_DATE

FROM DUAL)
PAY_PERIOD,

(SELECT  apae.start_date s_date,
(select min(apape.start_date)

from ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) start_date,
apae.end_date e_Date,
(select max(apape.end_date)

from ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) end_date ,
apae.person_id

from 
anc_per_abs_entries apae,
ANC_ABSENCE_TYPES_F_TL AATFL


where APAE.ABSENCE_TYPE_ID=AATFL.ABSENCE_TYPE_ID
AND AATFL.LANGUAGE=USERENV('LANG')
AND AATFL.SOURCE_LANG=USERENV('LANG')
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(AATFL.EFFECTIVE_START_DATE) AND TRUNC(AATFL.EFFECTIVE_END_DATE)
AND APAE.ABSENCE_STATUS_CD='SUBMITTED'
AND APAE.APPROVAL_STATUS_CD IN ('APPROVED','AWAITING')
AND UPPER(TRIM(AATFL.NAME))  IN (UPPER(TRIM('JURY SERVICE')),
			UPPER(TRIM('TIME OFF IN LEIU')),
UPPER(TRIM('MATERNITY LEAVE')),
upper(trim('Maternity1')),
upper(trim('Sickness'))
) 
)
apae

where PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
						AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)

AND APAE.PERSON_ID=PAAF.PERSON_ID

AND (TRUNC(APAE.START_DATE) BETWEEN TRUNC(SS_DATE) AND TRUNC(EE_DATE)
or TRUNC(APAE.END_DATE) BETWEEN TRUNC(SS_DATE) AND TRUNC(EE_DATE)
or 
(TRUNC(APAE.END_DATE) >TRUNC(EE_DATE)
and TRUNC(APAE.start_date) <TRUNC(ss_date)
)
)


AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)



 )

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
)
UNION
(SELECT 'LEAVE_ADD' DESCR,
'A' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
MIN(EFFECTIVE_START_DATE) START_DATE,
MAX(EFFECTIVE_END_DATE) END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE


FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
/* (case when APAE.START_DATE<ss_Date then ss_date
when APAE.START_DATE between ss_date and ee_date then APAE.START_DATE
end) */
(case when APAE.START_DATE<ss_Date then ss_date
when APAE.START_DATE between ss_date and ee_date then APAE.START_DATE
end) EFFECTIVE_START_DATE,

(case when APAE.end_Date>ee_Date then ee_Date
when APAE.end_Date between ss_date and ee_date then APAE.end_Date
end) EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
0 SALARY_AMOUNT,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+5
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) SS_DATE,

(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) EE_DATE

FROM DUAL)
PAY_PERIOD,

(SELECT  apae.start_date s_date,
(select min(apape.start_date)

from ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) start_date,
apae.end_date e_Date,
(select max(apape.end_date)

from ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) end_date ,
apae.person_id

from 
anc_per_abs_entries apae,
ANC_ABSENCE_TYPES_F_TL AATFL


where APAE.ABSENCE_TYPE_ID=AATFL.ABSENCE_TYPE_ID
AND AATFL.LANGUAGE=USERENV('LANG')
AND AATFL.SOURCE_LANG=USERENV('LANG')
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(AATFL.EFFECTIVE_START_DATE) AND TRUNC(AATFL.EFFECTIVE_END_DATE)
AND APAE.ABSENCE_STATUS_CD='SUBMITTED'
AND APAE.APPROVAL_STATUS_CD IN ('APPROVED','AWAITING')
AND UPPER(TRIM(AATFL.NAME))  IN (UPPER(TRIM('JURY SERVICE')),
			UPPER(TRIM('TIME OFF IN LEIU')),
UPPER(TRIM('MATERNITY LEAVE')),
upper(trim('Sickness')),
upper(trim('Maternity1'))
) 
)
apae

where PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
							AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)

AND APAE.PERSON_ID=PAAF.PERSON_ID

AND (TRUNC(APAE.START_DATE) BETWEEN TRUNC(SS_DATE) AND TRUNC(EE_DATE)
and TRUNC(APAE.END_DATE) BETWEEN TRUNC(SS_DATE) AND TRUNC(EE_DATE)
--or TRUNC(APAE.END_DATE) BETWEEN TRUNC(SS_DATE) AND TRUNC(EE_DATE)
/* or 
(TRUNC(APAE.END_DATE) >TRUNC(EE_DATE)
and TRUNC(APAE.start_date) <TRUNC(ss_date)
) */
)


AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)



 )

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
)
UNION
(SELECT 'LEAVE_ADD' DESCR,
'A' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
MIN(EFFECTIVE_START_DATE) START_DATE,
MAX(EFFECTIVE_END_DATE) END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE


FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
/* (case when APAE.START_DATE<ss_Date then ss_date
when APAE.START_DATE between ss_date and ee_date then APAE.START_DATE
end) */
trunc(case when APAE.end_Date<ee_Date then end_Date
else ee_Date-1
end)+1 EFFECTIVE_START_DATE,

last_day(trunc(case when APAE.end_Date<ee_Date then end_Date
else ee_Date-1
end)) EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
0 SALARY_AMOUNT,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+5
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) SS_DATE,

(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) EE_DATE

FROM DUAL)
PAY_PERIOD,

(SELECT  apae.start_date s_date,
(select min(apape.start_date)

from ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) start_date,
apae.end_date e_Date,
(select max(apape.end_date)

from ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) end_date ,
apae.person_id

from 
anc_per_abs_entries apae,
ANC_ABSENCE_TYPES_F_TL AATFL


where APAE.ABSENCE_TYPE_ID=AATFL.ABSENCE_TYPE_ID
AND AATFL.LANGUAGE=USERENV('LANG')
AND AATFL.SOURCE_LANG=USERENV('LANG')
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(AATFL.EFFECTIVE_START_DATE) AND TRUNC(AATFL.EFFECTIVE_END_DATE)
AND APAE.ABSENCE_STATUS_CD='SUBMITTED'
AND APAE.APPROVAL_STATUS_CD IN ('APPROVED','AWAITING')
AND UPPER(TRIM(AATFL.NAME))  IN (UPPER(TRIM('JURY SERVICE')),
			UPPER(TRIM('TIME OFF IN LEIU')),
UPPER(TRIM('MATERNITY LEAVE')),
upper(trim('Maternity1')),
upper(trim('Sickness'))
) 
)
apae

where PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
						AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)

AND APAE.PERSON_ID=PAAF.PERSON_ID

AND (tRUNC(APAE.END_DATE) BETWEEN TRUNC(SS_DATE) AND TRUNC(EE_DATE))


AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)



 )

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
)
union
(SELECT 'LEAVE_ADD' DESCR,
'A' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
MIN(EFFECTIVE_START_DATE) START_DATE,
MAX(EFFECTIVE_END_DATE) END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE


FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
/* (case when APAE.START_DATE<ss_Date then ss_date
when APAE.START_DATE between ss_date and ee_date then APAE.START_DATE
end) */
(case when APAE.START_DATE<ss_Date then ss_date
when APAE.START_DATE between ss_date and ee_date then APAE.START_DATE
end) EFFECTIVE_START_DATE,

(case when APAE.end_Date>ee_Date then ee_Date
when APAE.end_Date between ss_date and ee_date then APAE.end_Date
end) EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
0 SALARY_AMOUNT,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END SS_DATE,

CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+4
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END EE_DATE

FROM DUAL)
PAY_PERIOD,

(SELECT  apae.start_date s_date,
(select min(apape.start_date)

from ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) start_date,
apae.end_date e_Date,
(select max(apape.end_date)

from ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) end_date ,
apae.person_id

from 
anc_per_abs_entries apae,
ANC_ABSENCE_TYPES_F_TL AATFL


where SUBSTR(:P_PERIOD,6,2)='04'
and APAE.ABSENCE_TYPE_ID=AATFL.ABSENCE_TYPE_ID
AND AATFL.LANGUAGE=USERENV('LANG')
AND AATFL.SOURCE_LANG=USERENV('LANG')
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(AATFL.EFFECTIVE_START_DATE) AND TRUNC(AATFL.EFFECTIVE_END_DATE)
AND APAE.ABSENCE_STATUS_CD='SUBMITTED'
AND APAE.APPROVAL_STATUS_CD IN ('APPROVED','AWAITING')
AND UPPER(TRIM(AATFL.NAME))  IN (UPPER(TRIM('JURY SERVICE')),
			UPPER(TRIM('TIME OFF IN LEIU')),
UPPER(TRIM('MATERNITY LEAVE')),
upper(trim('Maternity1')),
upper(trim('Sickness'))
) 
)
apae

where PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
						AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)

AND APAE.PERSON_ID=PAAF.PERSON_ID

AND (TRUNC(APAE.START_DATE) BETWEEN TRUNC(SS_DATE) AND TRUNC(EE_DATE)
or TRUNC(APAE.END_DATE) BETWEEN TRUNC(SS_DATE) AND TRUNC(EE_DATE)
or 
(TRUNC(APAE.END_DATE) >TRUNC(EE_DATE)
and TRUNC(APAE.start_date) <TRUNC(ss_date)
)
)


AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)



 )

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
)
UNION
(SELECT 'LEAVE_ADD' DESCR,
'A' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
MIN(EFFECTIVE_START_DATE) START_DATE,
MAX(EFFECTIVE_END_DATE) END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE


FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
/* (case when APAE.START_DATE<ss_Date then ss_date
when APAE.START_DATE between ss_date and ee_date then APAE.START_DATE
end) */
trunc(case when APAE.end_Date<ee_Date then end_Date
else ee_Date-1
end)+1 EFFECTIVE_START_DATE,

ee_Date EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
0 SALARY_AMOUNT,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END SS_DATE,

CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+4
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END EE_DATE

FROM DUAL)
PAY_PERIOD,

(SELECT  apae.start_date s_date,
(select min(apape.start_date)

from ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) start_date,
apae.end_date e_Date,
(select max(apape.end_date)

from ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) end_date ,
apae.person_id

from 
anc_per_abs_entries apae,
ANC_ABSENCE_TYPES_F_TL AATFL


where SUBSTR(:P_PERIOD,6,2)='04'
and APAE.ABSENCE_TYPE_ID=AATFL.ABSENCE_TYPE_ID
AND AATFL.LANGUAGE=USERENV('LANG')
AND AATFL.SOURCE_LANG=USERENV('LANG')
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(AATFL.EFFECTIVE_START_DATE) AND TRUNC(AATFL.EFFECTIVE_END_DATE)
AND APAE.ABSENCE_STATUS_CD='SUBMITTED'
AND APAE.APPROVAL_STATUS_CD IN ('APPROVED','AWAITING')
AND UPPER(TRIM(AATFL.NAME))  IN (UPPER(TRIM('JURY SERVICE')),
			UPPER(TRIM('TIME OFF IN LEIU')),
UPPER(TRIM('MATERNITY LEAVE')),
upper(trim('Maternity1')),
upper(trim('Sickness'))
) 
)
apae

where PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
						AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)

AND APAE.PERSON_ID=PAAF.PERSON_ID

AND (tRUNC(APAE.END_DATE) BETWEEN TRUNC(SS_DATE) AND TRUNC(EE_DATE))


AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)



 )

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
)
UNION
(SELECT 'ASG_UPDATE' DESCR,
'U' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
NVL(
(CASE WHEN TO_CHAR((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END) ,'YYYY-MM')=
TO_CHAR(TRUNC((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'MONTH'),'YYYY-MM') THEN 
(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END) 

WHEN TO_CHAR((CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END),'YYYY-MM')=
TO_CHAR(TRUNC((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'MONTH'),'YYYY-MM') THEN 

TRUNC((CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END),'MONTH')

ELSE
TRUNC((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID  ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'MONTH')
END
),
(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END))
START_DATE,

NVL(
(CASE WHEN TO_CHAR((CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END),'YYYY-MM')=TO_CHAR((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID  ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'YYYY-MM') THEN (CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END)


ELSE (LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1
END
),
(CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END))
END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE

FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
(case when ((ppos.actual_termination_date between paaf.effective_start_date and paaf.effective_end_date or
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT',''))) in ('END','TERMINATE ASSIGNMENT')
) and (trunc(ppos.actual_termination_date,'month')>paaf.effective_start_date))
then trunc(ppos.actual_termination_date,'month')
else 
TRUNC(PAAF.EFFECTIVE_START_DATE)
end) 
EFFECTIVE_START_DATE,
TRUNC(PAAF.EFFECTIVE_END_DATE) EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE,
0 SALARY_AMOUNT

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+5
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) SS_DATE,

(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) EE_DATE

FROM DUAL)
PAY_PERIOD

where PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
						AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
--AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
AND (TRUNC(PAAF.last_update_date) BETWEEN SS_DATE AND EE_DATE )
AND SS_DATE>TRUNC(PAAF.EFFECTIVE_START_DATE)
--AND TRUNC(PAAF.EFFECTIVE_END_DATE)<>TRUNC(PPOS.ACTUAL_TERMINATION_DATE)
--AND (TRUNC(PPOS.ACTUAL_TERMINATION_DATE)>TRUNC(PAAF.EFFECTIVE_START_DATE))
AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)
and to_char(paaf.effective_start_date,'mm')<>'04'
 )
where  to_char(effective_start_date,'mm')<>'04'
GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
ASSIGNMENT_STATUS_TYPE,
SALARY_AMOUNT

)
UNION
(SELECT 'ELE_UPDATE' DESCR,
'U' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
MIN(EFFECTIVE_START_DATE) START_DATE,
MAX(EFFECTIVE_END_DATE) END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE


FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
/* (case when ELEMENT.START_DATE<ss_Date then ss_date
when ELEMENT.START_DATE between ss_date and ee_date then ELEMENT.START_DATE
end) */
(CASE WHEN TO_CHAR(element.start_date,'MM')='04' THEN TRUNC((ELEMENT.START_DATE),'MONTH')+5
ELSE ELEMENT.START_DATE END) EFFECTIVE_START_DATE,

TRUNC(ELEMENT.END_DATE) EFFECTIVE_END_DATE,

PAAF.NORMAL_HOURS,
FULL_PART_TIME,
ELEMENT.SALARY_AMOUNT SALARY_AMOUNT,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+5
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) SS_DATE,

(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) EE_DATE

FROM DUAL)
PAY_PERIOD,
(
SELECT
(CASE WHEN prr.PAYROLL_ASSIGNMENT_ID IS NOT NULL THEN PAAF.ASSIGNMENT_ID ELSE 
(SELECT PAAF1.ASSIGNMENT_ID
FROM PER_ALL_ASSIGNMENTS_F PAAF1
WHERE PAAF1.PERSON_ID=PAAF.PERSON_ID
AND UPPER(TRIM(PAAF1.PRIMARY_FLAG))=upper(trim('Y'))
AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE)
) END) ASSIGNMENT_ID,
(case when Subtract_or_Add='ADD' then to_number(prrv.result_value,'999999.99') else prrv.result_value*(-1) end) salary_amount,
TRUNC(nvl(prr.START_DATE,ptp.start_date)) start_date,
TRUNC(nvl(prr.end_date,ptp.end_date)) end_date,
pett.element_name,
pivt.name,
ppa.last_update_date

       FROM PAY_PAYROLL_ACTIONS PPA,
                           PAY_PAYROLL_REL_ACTIONS PPRA,
                           PAY_PAYROLL_ASSIGNMENTS PPACT,
                           PAY_INPUT_VALUES_TL PIVT,
                           PAY_INPUT_VALUES_F PIVF,
                           PAY_ELEMENT_TYPES_F PETF,
                           PAY_ELEMENT_TYPES_TL PETT,
                           PAY_RUN_RESULTS PRR,
                           PAY_RUN_RESULT_VALUES PRRV,
						   PAY_TIME_PERIODS PTP,
						   PAY_ALL_PAYROLLS_F PAF,
						   PER_ALL_ASSIGNMENTS_F PAAF,
						   (SELECT 
								pbt.balance_type_id,
								pbt.balance_name,
								DECODE (pbf.scale,  1, 'ADD',  -1, 'SUBTRACT',  NULL) Subtract_or_Add,
								pivf.name input_value,
								petf.element_name,
								pbt.legislation_code
								FROM 
								pay_balance_types_vl pbt,
									PAY_INPUT_VALUES_vL pivf,
									PAY_ELEMENT_TYPES_vL petf,
								pay_balance_feeds_f pbf,
								PER_LEGISLATIVE_DATA_GROUPS_VL LDG
								WHERE PBF.BALANCE_TYPE_ID=PBT.BALANCE_TYPE_ID   
								--1=1
								AND NVL (PBF.LEGISLATION_CODE, LDG.LEGISLATION_CODE) =
								LDG.LEGISLATION_CODE
								AND NVL (PBF.LEGISLATIVE_DATA_GROUP_ID, LDG.LEGISLATIVE_DATA_GROUP_ID) =
								LDG.LEGISLATIVE_DATA_GROUP_ID
								AND UPPER(TRIM(LDG.legislation_code)) = 'GB'
								AND pbf.element_type_id = petf.element_type_id(+)
								AND pbf.input_value_id = pivf.input_value_id(+)	
								AND LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) BETWEEN NVL(pbf.effective_start_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))) AND NVL(pbf.effective_end_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')))
								AND LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) BETWEEN NVL(pivf.effective_start_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))) AND NVL(pivf.effective_end_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')))
								AND LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) BETWEEN NVL(petf.effective_start_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))) AND NVL(petf.effective_end_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')))
								AND upper(pbt.balance_name) = 'TPA SALARY'
								--and upper(pivf.name)<>upper('Basic_Annual')
								ORDER BY pbt.balance_name
						   )
						   b_e_list
						   
                     WHERE   TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PPACT.START_DATE) AND TRUNC(PPACT.END_DATE)
					        AND PRRV.RUN_RESULT_ID = PRR.RUN_RESULT_ID
                           AND PIVF.INPUT_VALUE_ID = PRRV.INPUT_VALUE_ID
                           AND PRR.ELEMENT_TYPE_ID = PETT.ELEMENT_TYPE_ID
                           AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PETF.EFFECTIVE_START_DATE) AND TRUNC(PETF.EFFECTIVE_END_DATE)
                           AND PETT.LANGUAGE = USERENV('LANG')
						    AND PETT.SOURCE_LANG = USERENV('LANG')
                           AND PETT.ELEMENT_TYPE_ID = PETF.ELEMENT_TYPE_ID
                           AND PIVF.INPUT_VALUE_ID = PIVT.INPUT_VALUE_ID
                           AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PIVF.EFFECTIVE_START_DATE) AND TRUNC(PIVF.EFFECTIVE_END_DATE)
                           AND PIVT.LANGUAGE = USERENV('LANG')
						   AND PIVT.SOURCE_LANG = USERENV('LANG')
                          AND PIVF.ELEMENT_TYPE_ID = PETF.ELEMENT_TYPE_ID
                           AND PRR.PAYROLL_REL_ACTION_ID =
                                  PPRA.PAYROLL_REL_ACTION_ID
                           AND PPA.PAYROLL_ACTION_ID = PPRA.PAYROLL_ACTION_ID
						  AND PPRA.PAYROLL_RELATIONSHIP_ID=PPACT.PAYROLL_RELATIONSHIP_ID
						AND NVL(PRR.PAYROLL_ASSIGNMENT_ID,PPACT.PAYROLL_ASSIGNMENT_ID)=PPACT.PAYROLL_ASSIGNMENT_ID
						AND NVL(PRR.PAYROLL_TERM_ID,PPACT.PAYROLL_TERM_ID)=PPACT.PAYROLL_TERM_ID
						AND PAAF.ASSIGNMENT_ID=PPACT.HR_ASSIGNMENT_ID
						AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
                           AND PPRA.RETRO_COMPONENT_ID IS NULL
						   AND PTP.PAYROLL_ID=PPA.PAYROLL_ID
						   AND PTP.TIME_PERIOD_ID=PPA.EARN_TIME_PERIOD_ID
						   AND PTP.PERIOD_CATEGORY='E'
						   AND PAF.PAYROLL_ID = PPA.PAYROLL_ID
						   AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PAF.EFFECTIVE_START_DATE) AND TRUNC(PAF.EFFECTIVE_END_DATE)
						   AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PTP.START_DATE) AND TRUNC(PTP.END_DATE)
					      and PETT.element_name in (b_e_list.element_name)
						   AND UPPER(TRIM(PRR.STATUS))=UPPER(TRIM('P'))
						   and TRUNC(PPA.LAST_UPDATE_DATE) BETWEEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) and last_day((TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')))
						   and trunc(ptp.end_date)< (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
						   AND PIVT.NAME in (b_e_list.input_value)
						   AND prr.START_DATE IS NOT NULL 
						   AND prr.END_DATE IS NOT NULL
)
ELEMENT



where PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
						AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
AND TRUNC(ELEMENT.START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)

AND ELEMENT.ASSIGNMENT_ID=PAAF.ASSIGNMENT_ID

AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)
)

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE)
UNION
(SELECT 'LEAVE_UPDATE' DESCR,
'U' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
MIN(EFFECTIVE_START_DATE) START_DATE,
MAX(EFFECTIVE_END_DATE) END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE


FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
CASE WHEN TO_CHAR(APAE.START_DATE,'MM')='04' THEN TRUNC(TRUNC(APAE.START_DATE),'MONTH')+5
ELSE TRUNC(TRUNC(APAE.START_DATE),'MONTH') END  EFFECTIVE_START_DATE,
TRUNC(APAE.START_DATE)-1 EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
0 SALARY_AMOUNT,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+5
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) SS_DATE,

(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) EE_DATE

FROM DUAL)
PAY_PERIOD,
(SELECT  apae.start_date s_date,
(select min(apape.start_date)

from 
 ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) start_date,
apae.end_date e_Date,
APAE.last_update_date,
(select max(apape.end_date)

from ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),
			upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) end_date ,
apae.person_id

from 
anc_per_abs_entries apae,
ANC_ABSENCE_TYPES_F_TL AATFL

where  APAE.ABSENCE_TYPE_ID=AATFL.ABSENCE_TYPE_ID
AND AATFL.LANGUAGE=USERENV('LANG')
AND AATFL.SOURCE_LANG=USERENV('LANG')
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(AATFL.EFFECTIVE_START_DATE) AND TRUNC(AATFL.EFFECTIVE_END_DATE)
AND APAE.ABSENCE_STATUS_CD='SUBMITTED'
AND APAE.APPROVAL_STATUS_CD IN ('APPROVED','AWAITING')
AND UPPER(TRIM(AATFL.NAME))  IN (UPPER(TRIM('JURY SERVICE')),
			UPPER(TRIM('TIME OFF IN LEIU')),
UPPER(TRIM('MATERNITY LEAVE')),
upper(trim('Maternity1')),
upper(trim('Sickness'))
) 
)
apae

where PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
						AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
					

AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
AND APAE.PERSON_ID=PAAF.PERSON_ID
AND (TRUNC(APAE.last_update_date) BETWEEN TRUNC(SS_DATE) AND TRUNC(EE_DATE)
AND TRUNC(APAE.START_DATE)<SS_DATE
)

AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)



 )

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
)
UNION
(SELECT 'LEAVE_UPDATE' DESCR,
'U' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
MIN(EFFECTIVE_START_DATE) START_DATE,
MAX(EFFECTIVE_END_DATE) END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE


FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
TRUNC(APAE.START_DATE) EFFECTIVE_START_DATE,
(CASE WHEN TO_CHAR(APAE.END_DATE,'MM')='04' THEN TRUNC(APAE.START_DATE,'MONTH')+4
ELSE TRUNC(APAE.END_DATE) END) EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
0 SALARY_AMOUNT,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+5
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) SS_DATE,

(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) EE_DATE

FROM DUAL)
PAY_PERIOD,
(SELECT  apae.start_date s_date,
(select min(apape.start_date)

from 
 ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) start_date,
apae.end_date e_Date,
APAE.last_update_date,
(select max(apape.end_date)

from ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),
			upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) end_date ,
apae.person_id

from 
anc_per_abs_entries apae,
ANC_ABSENCE_TYPES_F_TL AATFL

where  APAE.ABSENCE_TYPE_ID=AATFL.ABSENCE_TYPE_ID
AND AATFL.LANGUAGE=USERENV('LANG')
AND AATFL.SOURCE_LANG=USERENV('LANG')
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(AATFL.EFFECTIVE_START_DATE) AND TRUNC(AATFL.EFFECTIVE_END_DATE)
AND APAE.ABSENCE_STATUS_CD='SUBMITTED'
AND APAE.APPROVAL_STATUS_CD IN ('APPROVED','AWAITING')
AND UPPER(TRIM(AATFL.NAME))  IN (UPPER(TRIM('JURY SERVICE')),
			UPPER(TRIM('TIME OFF IN LEIU')),
UPPER(TRIM('MATERNITY LEAVE')),
upper(trim('Maternity1')),
upper(trim('Sickness'))
) 
)
apae

where PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
						AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)

AND APAE.PERSON_ID=PAAF.PERSON_ID
AND (TRUNC(APAE.last_update_date) BETWEEN TRUNC(SS_DATE) AND TRUNC(EE_DATE)
AND TRUNC(APAE.START_DATE)<SS_DATE
)
AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)



 )

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
)
UNION
(SELECT 'LEAVE_UPDATE' DESCR,
'U' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
MIN(EFFECTIVE_START_DATE) START_DATE,
MAX(EFFECTIVE_END_DATE) END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE


FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
TRUNC(APAE.END_DATE) EFFECTIVE_START_DATE,
LAST_DAY(TRUNC(APAE.END_DATE)) EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
0 SALARY_AMOUNT,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+5
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) SS_DATE,

(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) EE_DATE

FROM DUAL)
PAY_PERIOD,
(SELECT  apae.start_date s_date,
(select min(apape.start_date)

from 
 ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) start_date,
apae.end_date e_Date,
APAE.last_update_date,
(select max(apape.end_date)

from ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),
			upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) end_date ,
apae.person_id

from 
anc_per_abs_entries apae,
ANC_ABSENCE_TYPES_F_TL AATFL

where  APAE.ABSENCE_TYPE_ID=AATFL.ABSENCE_TYPE_ID
AND AATFL.LANGUAGE=USERENV('LANG')
AND AATFL.SOURCE_LANG=USERENV('LANG')
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(AATFL.EFFECTIVE_START_DATE) AND TRUNC(AATFL.EFFECTIVE_END_DATE)
AND APAE.ABSENCE_STATUS_CD='SUBMITTED'
AND APAE.APPROVAL_STATUS_CD IN ('APPROVED','AWAITING')
AND UPPER(TRIM(AATFL.NAME))  IN (UPPER(TRIM('JURY SERVICE')),
			UPPER(TRIM('TIME OFF IN LEIU')),
UPPER(TRIM('MATERNITY LEAVE')),
upper(trim('Maternity1')),
upper(trim('Sickness'))
) 
)
apae

where PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
						AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
AND APAE.PERSON_ID=PAAF.PERSON_ID
AND (TRUNC(APAE.last_update_date) BETWEEN TRUNC(SS_DATE) AND TRUNC(EE_DATE)
AND TRUNC(APAE.START_DATE)<SS_DATE
AND TRUNC(APAE.end_Date)<SS_DATE
)

AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)

 )

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
)
union
(SELECT 'LEAVE_UPDATE' DESCR,
'U' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
MIN(EFFECTIVE_START_DATE) START_DATE,
MAX(EFFECTIVE_END_DATE) END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE


FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
(CASE WHEN TRUNC(apae.start_date)<TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-01'),'YYYY-MM-DD') THEN TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-01'),'YYYY-MM-DD') ELSE TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-01'),'YYYY-MM-DD') END
) EFFECTIVE_START_DATE,

(CASE WHEN TRUNC(apae.start_date)>TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD') THEN TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD')-1 
else  TRUNC(apae.start_date)-1 END
) EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
0 SALARY_AMOUNT,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+5
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) SS_DATE,

(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) EE_DATE

FROM DUAL)
PAY_PERIOD,
(SELECT  apae.start_date s_date,
(select min(apape.start_date)

from 
 ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) start_date,
apae.end_date e_Date,
APAE.last_update_date,
(select max(apape.end_date)

from ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),
			upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) end_date ,
apae.person_id

from 
anc_per_abs_entries apae,
ANC_ABSENCE_TYPES_F_TL AATFL

where  APAE.ABSENCE_TYPE_ID=AATFL.ABSENCE_TYPE_ID
AND AATFL.LANGUAGE=USERENV('LANG')
AND AATFL.SOURCE_LANG=USERENV('LANG')
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(AATFL.EFFECTIVE_START_DATE) AND TRUNC(AATFL.EFFECTIVE_END_DATE)
AND APAE.ABSENCE_STATUS_CD='SUBMITTED'
AND APAE.APPROVAL_STATUS_CD IN ('APPROVED','AWAITING')
AND UPPER(TRIM(AATFL.NAME))  IN (UPPER(TRIM('JURY SERVICE')),
			UPPER(TRIM('TIME OFF IN LEIU')),
UPPER(TRIM('MATERNITY LEAVE')),
upper(trim('Maternity1')),
upper(trim('Sickness'))
) 
)
apae

where (TO_CHAR(apae.start_date,'MM')='04' OR TO_CHAR(apae.end_date,'MM')='04')
and PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
						AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
					

AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
AND APAE.PERSON_ID=PAAF.PERSON_ID
AND (TRUNC(APAE.last_update_date) BETWEEN TRUNC(SS_DATE) AND TRUNC(EE_DATE)
AND TRUNC(APAE.START_DATE)<SS_DATE
)

AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)

 
)
GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
)
UNION
(SELECT 'LEAVE_UPDATE' DESCR,
'U' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
MIN(EFFECTIVE_START_DATE) START_DATE,
MAX(EFFECTIVE_END_DATE) END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE


FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
(CASE WHEN TRUNC(apae.start_date)<TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-01'),'YYYY-MM-DD') THEN TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-01'),'YYYY-MM-DD') 
when TRUNC(apae.start_date) between TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-01'),'YYYY-MM-DD') and TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD')
then TRUNC(apae.start_date) END
) EFFECTIVE_START_DATE,

(CASE WHEN TRUNC(apae.end_date)>TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD') THEN TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD') else TRUNC(apae.end_date) END
) EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
0 SALARY_AMOUNT,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+5
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) SS_DATE,

(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) EE_DATE

FROM DUAL)
PAY_PERIOD,
(SELECT  apae.start_date s_date,
(select min(apape.start_date)

from 
 ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) start_date,
apae.end_date e_Date,
APAE.last_update_date,
(select max(apape.end_date)

from ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),
			upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) end_date ,
apae.person_id

from 
anc_per_abs_entries apae,
ANC_ABSENCE_TYPES_F_TL AATFL

where  APAE.ABSENCE_TYPE_ID=AATFL.ABSENCE_TYPE_ID
AND AATFL.LANGUAGE=USERENV('LANG')
AND AATFL.SOURCE_LANG=USERENV('LANG')
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(AATFL.EFFECTIVE_START_DATE) AND TRUNC(AATFL.EFFECTIVE_END_DATE)
AND APAE.ABSENCE_STATUS_CD='SUBMITTED'
AND APAE.APPROVAL_STATUS_CD IN ('APPROVED','AWAITING')
AND UPPER(TRIM(AATFL.NAME))  IN (UPPER(TRIM('JURY SERVICE')),
			UPPER(TRIM('TIME OFF IN LEIU')),
UPPER(TRIM('MATERNITY LEAVE')),
upper(trim('Maternity1')),
upper(trim('Sickness'))
) 
)
apae

where (TRUNC(apae.start_date) between TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-01'),'YYYY-MM-DD') and TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD'))
and PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
						AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)

AND APAE.PERSON_ID=PAAF.PERSON_ID

AND (TRUNC(APAE.last_update_date) BETWEEN TRUNC(SS_DATE) AND TRUNC(EE_DATE)
AND TRUNC(APAE.START_DATE)<SS_DATE
)
AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)



 )

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
)
UNION
(SELECT 'LEAVE_UPDATE' DESCR,
'U' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
MIN(EFFECTIVE_START_DATE) START_DATE,
MAX(EFFECTIVE_END_DATE) END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE


FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
(CASE WHEN TRUNC(apae.end_date)<TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD') THEN TRUNC(apae.end_date) else TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD')  END
) EFFECTIVE_START_DATE,

(CASE WHEN TRUNC(apae.end_date)>TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD') THEN TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD') else 
TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD') end) EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
0 SALARY_AMOUNT,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+5
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) SS_DATE,

(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) EE_DATE

FROM DUAL)
PAY_PERIOD,
(SELECT  apae.start_date s_date,
(select min(apape.start_date)

from 
 ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) start_date,
apae.end_date e_Date,
APAE.last_update_date,
(select max(apape.end_date)

from ANC_PER_ABS_PLAN_ENTRIES apape,
ANC_ABSENCE_PLANS_VL AAPV
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.ABSENCE_PLAN_ID=AAPV.ABSENCE_PLAN_ID		
			AND UPPER(TRIM(AAPV.LANGUAGE))=UPPER(TRIM(USERENV('LANG')))
			AND UPPER(TRIM(AAPV.SOURCE_LANG))=UPPER(TRIM(USERENV('LANG')))
			AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(AAPV.EFFECTIVE_START_DATE(+),SYSDATE)) AND TRUNC(NVL(AAPV.EFFECTIVE_END_DATE(+),SYSDATE))
			AND UPPER(TRIM(AAPV.NAME)) IN (UPPER(TRIM('OCCUPATIONAL TEACHERS SICK PLAN')),
			UPPER(TRIM('OCCUPATIONAL TEACHERS MATERNITY PLAN')),
			upper(trim('Occupational LGPS Maternity')))
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) end_date ,
apae.person_id

from 
anc_per_abs_entries apae,
ANC_ABSENCE_TYPES_F_TL AATFL

where  APAE.ABSENCE_TYPE_ID=AATFL.ABSENCE_TYPE_ID
AND AATFL.LANGUAGE=USERENV('LANG')
AND AATFL.SOURCE_LANG=USERENV('LANG')
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(AATFL.EFFECTIVE_START_DATE) AND TRUNC(AATFL.EFFECTIVE_END_DATE)
AND APAE.ABSENCE_STATUS_CD='SUBMITTED'
AND APAE.APPROVAL_STATUS_CD IN ('APPROVED','AWAITING')
AND UPPER(TRIM(AATFL.NAME))  IN (UPPER(TRIM('JURY SERVICE')),
			UPPER(TRIM('TIME OFF IN LEIU')),
UPPER(TRIM('MATERNITY LEAVE')),
upper(trim('Maternity1')),
upper(trim('Sickness'))
) 
)
apae

where  (TRUNC(apae.start_date) between TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-01'),'YYYY-MM-DD') and TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD'))
and PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
						AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
AND APAE.PERSON_ID=PAAF.PERSON_ID
AND (TRUNC(APAE.last_update_date) BETWEEN TRUNC(SS_DATE) AND TRUNC(EE_DATE)
AND TRUNC(APAE.START_DATE)<SS_DATE
)

AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)

 )

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
)
/* UNION
(SELECT 'SAL_UPDATE' DESCR,
'U' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
NVL(
(CASE WHEN TO_CHAR((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END) ,'YYYY-MM')=
TO_CHAR(TRUNC((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'MONTH'),'YYYY-MM') THEN 
(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END) 

WHEN TO_CHAR((CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END),'YYYY-MM')=
TO_CHAR(TRUNC((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'MONTH'),'YYYY-MM') THEN 

TRUNC((CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END),'MONTH')

ELSE
TRUNC((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'MONTH')
END
),
(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END))
START_DATE,

NVL(
(CASE WHEN TO_CHAR((CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END),'YYYY-MM')=TO_CHAR((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'YYYY-MM') THEN (CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END)
ELSE (LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1
END
),
(CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END))
END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE

FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE3,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
SAL.DATE_FROM EFFECTIVE_START_DATE,
SAL.DATE_TO   EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SAL.SALARY_AMOUNT,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+5
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) SS_DATE,

(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) EE_DATE

FROM DUAL)
PAY_PERIOD,
CMP_SALARY SAL

where PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
							AND (
						(UPPER(TRIM(PPG1.SEGMENT2)) =UPPER(TRIM('TEACHERS'))) or
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('NOT JOINED - TEACHERS')),UPPER(TRIM('OPTED OUT - TEACHERS'))) and
						UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
--AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)

AND SAL.PERSON_ID=PAAF.PERSON_ID
AND SAL.ASSIGNMENT_ID=PAAF.ASSIGNMENT_ID
AND TRUNC(NVL(SAL.last_update_date,SS_DATE )) BETWEEN SS_DATE AND EE_DATE 
AND SS_DATE>TRUNC(SAL.DATE_FROM)
AND PPOS.DATE_START =(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)
AND TRUNC(SAL.DATE_FROM) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
AND PPOS.ACTUAL_TERMINATION_DATE IS NULL

and to_char(sal.date_to,'mm')<>'04'

 )

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
SS_DATE,
EE_DATE,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
) */
/* UNION
(SELECT 'SAL_ADD' DESCR,
'A' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN SS_DATE
ELSE MIN(EFFECTIVE_START_DATE) END) START_DATE,

NVL(ACTUAL_TERMINATION_DATE,(CASE WHEN MAX(EFFECTIVE_END_DATE)>EE_DATE THEN EE_DATE 
ELSE MAX(EFFECTIVE_END_DATE) END)) END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE


FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE3,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
SAL.DATE_FROM EFFECTIVE_START_DATE,
SAL.DATE_TO   EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
SAL.SALARY_AMOUNT,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+5
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) SS_DATE,

(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) EE_DATE

FROM DUAL)
PAY_PERIOD,
CMP_SALARY SAL

where PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
							AND (
						(UPPER(TRIM(PPG1.SEGMENT2)) =UPPER(TRIM('TEACHERS'))) or
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('NOT JOINED - TEACHERS')),UPPER(TRIM('OPTED OUT - TEACHERS'))) and
						UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
--AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)

AND SAL.PERSON_ID=PAAF.PERSON_ID
AND SAL.ASSIGNMENT_ID=PAAF.ASSIGNMENT_ID

AND ((SS_DATE BETWEEN TRUNC(SAL.DATE_FROM) AND TRUNC(SAL.DATE_TO))
OR (EE_DATE BETWEEN TRUNC(SAL.DATE_FROM) AND TRUNC(SAL.DATE_TO))
OR (SS_DATE<TRUNC(SAL.DATE_FROM)
AND EE_DATE >TRUNC(SAL.DATE_TO)) 

)
--AND TRUNC(SAL.last_update_date) BETWEEN SS_DATE AND EE_DATE 

AND TRUNC(SAL.DATE_FROM) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
AND TRUNC(SAL.DATE_FROM)> TRUNC(PPOS.DATE_START)
AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)



 )

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
) */
) ALL_COM
)

ORDER BY ASSIGNMENT_NUMBER,START_DATE,END_DATE
)

GROUP BY ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
--NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
WITHDRAWN_STATUS,
D_EXC,
M_S_DATE,
M_E_DATE,
START_DATE,
END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE/* ,
N_S_DATE,
P_S_DATE,
N_E_DATE,
P_E_DATE,
S_DATE,
E_DATE */
)
UNION
(SELECT 
ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
--NORMAL_HOURS,
FULL_PART_TIME,
WITHDRAWN_STATUS,
D_EXC,
M_S_DATE,
M_E_DATE,
START_DATE,
(CASE WHEN END_DATE>EE_DATE THEN EE_DATE ELSE END_DATE END) END_DATE,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
/* ,
N_S_DATE,
P_S_DATE,
N_E_DATE,
P_E_DATE,
S_DATE,
E_DATE */

FROM

(SELECT ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
''  WITHDRAWN_STATUS,
0 D_EXC,
TRUNC(START_DATE,'MONTH') M_S_DATE,
LAST_DAY(START_DATE) M_E_DATE,
START_DATE S_DATE,
END_DATE E_DATE,
LEAD(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE ) N_S_DATE,
LAG(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE ) P_S_DATE,
LEAD(END_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE) N_E_DATE,
LAG(END_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE) P_E_DATE,

(CASE WHEN LAG(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE ) IS NULL AND 
LAG(END_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE) IS NULL THEN START_DATE

WHEN LEAD(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE ) IS NULL THEN START_DATE

WHEN LAG(END_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE)+1 =START_DATE THEN START_DATE
WHEN TO_CHAR((LAG(END_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE)+1),'MM-YYYY')<>TO_CHAR(START_DATE,'MM-YYYY') THEN START_DATE
ELSE LAG(END_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE)+1 END) START_DATE,

NVL((CASE WHEN LAG(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE ) IS NULL AND 
LAG(END_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE) IS NULL THEN END_DATE

WHEN LEAD(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE )-1 =END_DATE THEN END_DATE
WHEN TO_CHAR((LEAD(START_DATE,1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE )-1),'MM-YYYY')<>TO_CHAR(END_DATE,'MM-YYYY') THEN END_DATE
ELSE LEAD(START_DATE,2) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,START_DATE,END_DATE )-1 END),END_DATE) END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE

FROM

(SELECT ALL_COM.* FROM
(
(SELECT 'ASG_ADD' DESCR,
'A' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN SS_DATE
ELSE MIN(EFFECTIVE_START_DATE) END) START_DATE,

(CASE WHEN ACTUAL_TERMINATION_DATE BETWEEN  SS_DATE AND EE_DATE THEN ACTUAL_TERMINATION_DATE ELSE
(CASE WHEN MAX(EFFECTIVE_END_DATE)>EE_DATE THEN EE_DATE
ELSE MAX(EFFECTIVE_END_DATE) END) END) END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE



FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
PAAF.EFFECTIVE_START_DATE,
PAAF.EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
0 SALARY_AMOUNT,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END SS_DATE,

CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+4
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END EE_DATE

FROM DUAL)
PAY_PERIOD

WHERE SUBSTR(:P_PERIOD,6,2)='04'  and PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
						AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
--AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
AND ((SS_DATE BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE))
OR (EE_DATE BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE))
OR (SS_DATE<TRUNC(PAAF.EFFECTIVE_START_DATE)
AND EE_DATE>TRUNC(PAAF.EFFECTIVE_END_DATE)) 
)
AND (PPOS.ACTUAL_TERMINATION_DATE IS NULL OR  TRUNC(PPOS.ACTUAL_TERMINATION_DATE)>SS_DATE)
AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)


 )

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
)
UNION
(SELECT 'LEAVE_ADD' DESCR,
'A' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
MIN(EFFECTIVE_START_DATE) START_DATE,
MAX(EFFECTIVE_END_DATE) END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE


FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
/* (case when APAE.START_DATE<ss_Date then ss_date
when APAE.START_DATE between ss_date and ee_date then APAE.START_DATE
end) */
(CASE WHEN TO_CHAR((case when APAE.START_DATE<ss_Date then ss_date
when APAE.START_DATE between ss_date and ee_date then APAE.START_DATE
end),'MM')='04' THEN TRUNC(((case when APAE.START_DATE<ss_Date then ss_date
when APAE.START_DATE between ss_date and ee_date then APAE.START_DATE
end)),'MONTH')
ELSE TRUNC(((case when APAE.START_DATE<ss_Date then ss_date
when APAE.START_DATE between ss_date and ee_date then APAE.START_DATE
end)),'MONTH') END) EFFECTIVE_START_DATE,

TRUNC((case when APAE.START_DATE<ss_Date then ss_date
when APAE.START_DATE between ss_date and ee_date then APAE.START_DATE
end))-1 EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
0 SALARY_AMOUNT,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END SS_DATE,

CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+4
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END EE_DATE

FROM DUAL)
PAY_PERIOD,

(SELECT  apae.start_date s_date,
(select min(apape.start_date)

from ANC_PER_ABS_PLAN_ENTRIES apape
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) start_date,
apae.end_date e_Date,
(select max(apape.end_date)

from ANC_PER_ABS_PLAN_ENTRIES apape
where APAPE.PERSON_ID=apae.PERSON_ID
AND APAPE.PAY_FACTOR_WITHOUT_OVERRIDE=0 
AND TRUNC(APAPE.START_DATE) BETWEEN TRUNC(APAE.START_DATE) AND TRUNC(nvl(APAE.END_DATE,(LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+1)))
) end_date ,
apae.person_id

from 
anc_per_abs_entries apae,
ANC_ABSENCE_TYPES_F_TL AATFL


where APAE.ABSENCE_TYPE_ID=AATFL.ABSENCE_TYPE_ID
AND AATFL.LANGUAGE=USERENV('LANG')
AND AATFL.SOURCE_LANG=USERENV('LANG')
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(AATFL.EFFECTIVE_START_DATE) AND TRUNC(AATFL.EFFECTIVE_END_DATE)
AND APAE.ABSENCE_STATUS_CD='SUBMITTED'
AND APAE.APPROVAL_STATUS_CD IN ('APPROVED','AWAITING')
AND UPPER(TRIM(AATFL.NAME))  IN (UPPER(TRIM('JURY SERVICE')),
			UPPER(TRIM('TIME OFF IN LEIU')),
UPPER(TRIM('MATERNITY LEAVE')),
upper(trim('Maternity1')),
upper(trim('Sickness'))
) 
)
apae

where SUBSTR(:P_PERIOD,6,2)='04'
and PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
						AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
AND TRUNC(APAE.START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)

AND APAE.PERSON_ID=PAAF.PERSON_ID

AND (TRUNC(APAE.START_DATE) BETWEEN TRUNC(SS_DATE) AND TRUNC(EE_DATE)
or TRUNC(APAE.END_DATE) BETWEEN TRUNC(SS_DATE) AND TRUNC(EE_DATE)
or 
(TRUNC(APAE.END_DATE) >TRUNC(EE_DATE)
and TRUNC(APAE.start_date) <TRUNC(ss_date)
)
)


AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)



 )

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
)
UNION
(SELECT 'ASG_UPDATE' DESCR,
'U' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
NVL(
(CASE WHEN TO_CHAR((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END) ,'YYYY-MM')=
TO_CHAR(TRUNC((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'MONTH'),'YYYY-MM') THEN 
(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END) 

WHEN TO_CHAR((CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END),'YYYY-MM')=
TO_CHAR(TRUNC((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'MONTH'),'YYYY-MM') THEN 

TRUNC((CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END),'MONTH')

ELSE
TRUNC((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID  ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'MONTH')
END
),
(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END))
START_DATE,

NVL(
(CASE WHEN TO_CHAR((CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END),'YYYY-MM')=TO_CHAR((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID  ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'YYYY-MM') THEN (CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END)


ELSE (LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1
END
),
(CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END))
END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE

FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
(CASE WHEN TRUNC(PAAF.EFFECTIVE_START_DATE)<TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-01'),'YYYY-MM-DD') THEN TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-01'),'YYYY-MM-DD') ELSE TRUNC(PAAF.EFFECTIVE_START_DATE) END
) EFFECTIVE_START_DATE,

(CASE WHEN TRUNC(PAAF.EFFECTIVE_END_DATE)>TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD') THEN TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD')-1 ELSE TRUNC(PAAF.EFFECTIVE_END_DATE ) END
) EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE,
0 SALARY_AMOUNT

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END SS_DATE,

CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+4
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END EE_DATE

FROM DUAL)
PAY_PERIOD

WHERE (TO_CHAR(paaf.effective_start_date,'MM')='04' OR TO_CHAR(paaf.effective_end_date,'MM')='04')
  and PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
						AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
--AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
AND (TRUNC(PAAF.last_update_date) BETWEEN SS_DATE AND EE_DATE )
AND SS_DATE>TRUNC(PAAF.EFFECTIVE_START_DATE)
--AND TRUNC(PAAF.EFFECTIVE_END_DATE)<>TRUNC(PPOS.ACTUAL_TERMINATION_DATE)
--AND (TRUNC(PPOS.ACTUAL_TERMINATION_DATE)>TRUNC(PAAF.EFFECTIVE_START_DATE))
AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)

 )
where effective_start_date<effective_end_date
GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
ASSIGNMENT_STATUS_TYPE,
SALARY_AMOUNT
)
/* UNION
(SELECT 'SAL_UPDATE' DESCR,
'U' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
NVL(
(CASE WHEN TO_CHAR((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END) ,'YYYY-MM')=
TO_CHAR(TRUNC((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'MONTH'),'YYYY-MM') THEN 
(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END) 

WHEN TO_CHAR((CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END),'YYYY-MM')=
TO_CHAR(TRUNC((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'MONTH'),'YYYY-MM') THEN 

TRUNC((CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END),'MONTH')

ELSE
TRUNC((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'MONTH')
END
),
(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END))
START_DATE,

NVL(
(CASE WHEN TO_CHAR((CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END),'YYYY-MM')=TO_CHAR((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'YYYY-MM') THEN (CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END)
ELSE (LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1
END
),
(CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END))
END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE

FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE3,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
(CASE WHEN TRUNC(sal.date_from)<TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-01'),'YYYY-MM-DD') THEN TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-01'),'YYYY-MM-DD') ELSE TRUNC(sal.date_from) END
) EFFECTIVE_START_DATE,

(CASE WHEN TRUNC(sal.date_to)>TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD') THEN TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD')-1 ELSE TRUNC(sal.date_to ) END
) EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SAL.SALARY_AMOUNT,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END SS_DATE,

CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+4
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END EE_DATE

FROM DUAL)
PAY_PERIOD,
CMP_SALARY SAL

WHERE (TO_CHAR(sal.date_from,'MM')='04' OR TO_CHAR(sal.date_to,'MM')='04')
  and PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
							AND (
						(UPPER(TRIM(PPG1.SEGMENT2)) =UPPER(TRIM('TEACHERS'))) or
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('NOT JOINED - TEACHERS')),UPPER(TRIM('OPTED OUT - TEACHERS'))) and
						UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
--AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)

AND SAL.PERSON_ID=PAAF.PERSON_ID
AND SAL.ASSIGNMENT_ID=PAAF.ASSIGNMENT_ID
AND TRUNC(NVL(SAL.last_update_date,SS_DATE )) BETWEEN SS_DATE AND EE_DATE 
AND SS_DATE>TRUNC(SAL.DATE_FROM)
AND PPOS.DATE_START =(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)
AND TRUNC(SAL.DATE_FROM) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
AND PPOS.ACTUAL_TERMINATION_DATE IS NULL



 )
where effective_start_date<effective_end_date
GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
SS_DATE,
EE_DATE,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
) */
UNION
(SELECT 'ASG_UPDATE' DESCR,
'U' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
NVL(
(CASE WHEN TO_CHAR((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END) ,'YYYY-MM')=
TO_CHAR(TRUNC((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'MONTH'),'YYYY-MM') THEN 
(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END) 

WHEN TO_CHAR((CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END),'YYYY-MM')=
TO_CHAR(TRUNC((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'MONTH'),'YYYY-MM') THEN 

TRUNC((CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END),'MONTH')

ELSE
TRUNC((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID  ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'MONTH')
END
),
(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END))
START_DATE,

NVL(
(CASE WHEN TO_CHAR((CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END),'YYYY-MM')=TO_CHAR((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID  ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'YYYY-MM') THEN (CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END)


ELSE (LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1
END
),
(CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END))
END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE

FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
(CASE WHEN TRUNC(paaf.effective_start_date)<TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD') THEN TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD') ELSE TRUNC(paaf.effective_start_date) END
) EFFECTIVE_START_DATE,

(CASE WHEN TRUNC(paaf.effective_end_date )<TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD') THEN TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD')-1 ELSE TRUNC(paaf.effective_end_date ) END
) EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE,
0 SALARY_AMOUNT

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END SS_DATE,

CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+4
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END EE_DATE

FROM DUAL)
PAY_PERIOD

WHERE (TO_CHAR(paaf.effective_start_date,'MM')='04' OR TO_CHAR(paaf.effective_end_date,'MM')='04')
  and PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
						AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
--AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
AND (TRUNC(PAAF.last_update_date) BETWEEN SS_DATE AND EE_DATE )
AND SS_DATE>TRUNC(PAAF.EFFECTIVE_START_DATE)
--AND TRUNC(PAAF.EFFECTIVE_END_DATE)<>TRUNC(PPOS.ACTUAL_TERMINATION_DATE)
--AND (TRUNC(PPOS.ACTUAL_TERMINATION_DATE)>TRUNC(PAAF.EFFECTIVE_START_DATE))
AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)

 )
where effective_start_date<effective_end_date
GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
ASSIGNMENT_STATUS_TYPE,
SALARY_AMOUNT
)
UNION
(SELECT 'ELE_UPDATE' DESCR,
'U' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
(CASE WHEN TRUNC(EFFECTIVE_START_DATE)<TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-01'),'YYYY-MM-DD') THEN TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-01'),'YYYY-MM-DD') ELSE TRUNC(EFFECTIVE_START_DATE) END
) EFFECTIVE_START_DATE,

(CASE WHEN TRUNC(EFFECTIVE_END_DATE)>TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD') THEN TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD')-1 ELSE TRUNC(EFFECTIVE_END_DATE ) END
) EFFECTIVE_END_DATE,

SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE


FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
/* (case when ELEMENT.START_DATE<ss_Date then ss_date
when ELEMENT.START_DATE between ss_date and ee_date then ELEMENT.START_DATE
end) */
ELEMENT.START_DATE EFFECTIVE_START_DATE,

ELEMENT.END_DATE EFFECTIVE_END_DATE,

PAAF.NORMAL_HOURS,
FULL_PART_TIME,
ELEMENT.SALARY_AMOUNT SALARY_AMOUNT,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) SS_DATE,

(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+4
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) EE_DATE

FROM DUAL)
PAY_PERIOD,
(
SELECT
(CASE WHEN prr.PAYROLL_ASSIGNMENT_ID IS NOT NULL THEN PAAF.ASSIGNMENT_ID ELSE 
(SELECT PAAF1.ASSIGNMENT_ID
FROM PER_ALL_ASSIGNMENTS_F PAAF1
WHERE PAAF1.PERSON_ID=PAAF.PERSON_ID
AND UPPER(TRIM(PAAF1.PRIMARY_FLAG))=upper(trim('Y'))
AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE)
) END) ASSIGNMENT_ID,
(case when Subtract_or_Add='ADD' then to_number(prrv.result_value,'999999.99') else prrv.result_value*(-1) end) salary_amount,
TRUNC(nvl(prr.START_DATE,ptp.start_date)) start_date,
TRUNC(nvl(prr.end_date,ptp.end_date)) end_date,
pett.element_name,
pivt.name,
ppa.last_update_date

       FROM PAY_PAYROLL_ACTIONS PPA,
                           PAY_PAYROLL_REL_ACTIONS PPRA,
                           PAY_PAYROLL_ASSIGNMENTS PPACT,
                           PAY_INPUT_VALUES_TL PIVT,
                           PAY_INPUT_VALUES_F PIVF,
                           PAY_ELEMENT_TYPES_F PETF,
                           PAY_ELEMENT_TYPES_TL PETT,
                           PAY_RUN_RESULTS PRR,
                           PAY_RUN_RESULT_VALUES PRRV,
						   PAY_TIME_PERIODS PTP,
						   PAY_ALL_PAYROLLS_F PAF,
						   PER_ALL_ASSIGNMENTS_F PAAF,
						   (SELECT 
								pbt.balance_type_id,
								pbt.balance_name,
								DECODE (pbf.scale,  1, 'ADD',  -1, 'SUBTRACT',  NULL) Subtract_or_Add,
								pivf.name input_value,
								petf.element_name,
								pbt.legislation_code
								FROM 
								pay_balance_types_vl pbt,
									PAY_INPUT_VALUES_vL pivf,
									PAY_ELEMENT_TYPES_vL petf,
								pay_balance_feeds_f pbf,
								PER_LEGISLATIVE_DATA_GROUPS_VL LDG
								WHERE PBF.BALANCE_TYPE_ID=PBT.BALANCE_TYPE_ID   
								--1=1
								AND NVL (PBF.LEGISLATION_CODE, LDG.LEGISLATION_CODE) =
								LDG.LEGISLATION_CODE
								AND NVL (PBF.LEGISLATIVE_DATA_GROUP_ID, LDG.LEGISLATIVE_DATA_GROUP_ID) =
								LDG.LEGISLATIVE_DATA_GROUP_ID
									AND UPPER(TRIM(LDG.legislation_code)) = 'GB'
								AND pbf.element_type_id = petf.element_type_id(+)
								AND pbf.input_value_id = pivf.input_value_id(+)	
								AND LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) BETWEEN NVL(pbf.effective_start_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))) AND NVL(pbf.effective_end_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')))
								AND LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) BETWEEN NVL(pivf.effective_start_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))) AND NVL(pivf.effective_end_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')))
								AND LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) BETWEEN NVL(petf.effective_start_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))) AND NVL(petf.effective_end_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')))
								AND upper(pbt.balance_name) = 'TPA SALARY'
								--and upper(pivf.name)<>upper('Basic_Annual')
								ORDER BY pbt.balance_name
						   )
						   b_e_list
						   
                     WHERE   TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PPACT.START_DATE) AND TRUNC(PPACT.END_DATE)
					        AND PRRV.RUN_RESULT_ID = PRR.RUN_RESULT_ID
                           AND PIVF.INPUT_VALUE_ID = PRRV.INPUT_VALUE_ID
                           AND PRR.ELEMENT_TYPE_ID = PETT.ELEMENT_TYPE_ID
                           AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PETF.EFFECTIVE_START_DATE) AND TRUNC(PETF.EFFECTIVE_END_DATE)
                           AND PETT.LANGUAGE = USERENV('LANG')
						    AND PETT.SOURCE_LANG = USERENV('LANG')
                           AND PETT.ELEMENT_TYPE_ID = PETF.ELEMENT_TYPE_ID
                           AND PIVF.INPUT_VALUE_ID = PIVT.INPUT_VALUE_ID
                           AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PIVF.EFFECTIVE_START_DATE) AND TRUNC(PIVF.EFFECTIVE_END_DATE)
                           AND PIVT.LANGUAGE = USERENV('LANG')
						   AND PIVT.SOURCE_LANG = USERENV('LANG')
                          AND PIVF.ELEMENT_TYPE_ID = PETF.ELEMENT_TYPE_ID
                           AND PRR.PAYROLL_REL_ACTION_ID =
                                  PPRA.PAYROLL_REL_ACTION_ID
                           AND PPA.PAYROLL_ACTION_ID = PPRA.PAYROLL_ACTION_ID
						  AND PPRA.PAYROLL_RELATIONSHIP_ID=PPACT.PAYROLL_RELATIONSHIP_ID
						AND NVL(PRR.PAYROLL_ASSIGNMENT_ID,PPACT.PAYROLL_ASSIGNMENT_ID)=PPACT.PAYROLL_ASSIGNMENT_ID
						AND NVL(PRR.PAYROLL_TERM_ID,PPACT.PAYROLL_TERM_ID)=PPACT.PAYROLL_TERM_ID
						AND PAAF.ASSIGNMENT_ID=PPACT.HR_ASSIGNMENT_ID
						AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
                           AND PPRA.RETRO_COMPONENT_ID IS NULL
						   AND PTP.PAYROLL_ID=PPA.PAYROLL_ID
						   AND PTP.TIME_PERIOD_ID=PPA.EARN_TIME_PERIOD_ID
						   AND PTP.PERIOD_CATEGORY='E'
						   AND PAF.PAYROLL_ID = PPA.PAYROLL_ID
						   AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PAF.EFFECTIVE_START_DATE) AND TRUNC(PAF.EFFECTIVE_END_DATE)
						   AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PTP.START_DATE) AND TRUNC(PTP.END_DATE)
					      and PETT.element_name in (b_e_list.element_name)
						   AND UPPER(TRIM(PRR.STATUS))=UPPER(TRIM('P'))
						   and TRUNC(PPA.LAST_UPDATE_DATE) BETWEEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) and last_day((TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')))
						   and trunc(ptp.end_date)< (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))						   
						   AND (TO_CHAR(TRUNC(nvl(prr.START_DATE,ptp.start_date)) ,'MM')='04' OR TO_CHAR(TRUNC(nvl(prr.END_DATE,ptp.END_DATE)) ,'MM')='04')
						   AND PIVT.NAME in (b_e_list.input_value)
						   AND prr.START_DATE IS NOT NULL 
						   AND prr.END_DATE IS NOT NULL
)
ELEMENT

where PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
						AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
AND TRUNC(ELEMENT.START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
/* 
AND ((SS_DATE BETWEEN TRUNC(ELEMENT.START_DATE) AND TRUNC(ELEMENT.end_DATE))
OR (EE_DATE BETWEEN TRUNC(ELEMENT.START_DATE) AND TRUNC(ELEMENT.end_DATE))
) */

AND ELEMENT.ASSIGNMENT_ID=PAAF.ASSIGNMENT_ID

AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)
)

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE,
EFFECTIVE_END_DATE,
EFFECTIVE_START_DATE
)
/* UNION
(SELECT 'SAL_UPDATE' DESCR,
'U' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
NVL(
(CASE WHEN TO_CHAR((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END) ,'YYYY-MM')=
TO_CHAR(TRUNC((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'MONTH'),'YYYY-MM') THEN 
(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END) 
END
),
(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END))
START_DATE,

NVL(
(CASE WHEN TO_CHAR((CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END),'YYYY-MM')=TO_CHAR((LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1,'YYYY-MM') THEN (CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END)
ELSE (LEAD((CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END),1) OVER (PARTITION BY ASSIGNMENT_ID ORDER BY ASSIGNMENT_ID,(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN MIN(EFFECTIVE_START_DATE)
ELSE SS_DATE END)))-1
END
),
(CASE WHEN MAX(EFFECTIVE_END_DATE)>LAST_DAY(MIN(EFFECTIVE_START_DATE)) THEN LAST_DAY(MIN(EFFECTIVE_START_DATE))
ELSE MAX(EFFECTIVE_END_DATE) END))
END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE

FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE3,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
(CASE WHEN TRUNC(SAL.DATE_FROM)<TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD') THEN TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD') ELSE TRUNC(SAL.DATE_FROM) END
) EFFECTIVE_START_DATE,

(CASE WHEN TRUNC(SAL.DATE_TO )<TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD') THEN TO_DATE((SUBSTR(:P_PERIOD,1,4)||'-04-06'),'YYYY-MM-DD')-1 ELSE TRUNC(SAL.DATE_TO ) END
) EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SAL.SALARY_AMOUNT,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END SS_DATE,

CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+4
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END EE_DATE

FROM DUAL)
PAY_PERIOD,
CMP_SALARY SAL

WHERE (TO_CHAR(sal.date_from,'MM')='04' OR TO_CHAR(sal.date_to,'MM')='04')
  and PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
							AND (
						(UPPER(TRIM(PPG1.SEGMENT2)) =UPPER(TRIM('TEACHERS'))) or
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('NOT JOINED - TEACHERS')),UPPER(TRIM('OPTED OUT - TEACHERS'))) and
						UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
--AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)

AND SAL.PERSON_ID=PAAF.PERSON_ID
AND SAL.ASSIGNMENT_ID=PAAF.ASSIGNMENT_ID
AND TRUNC(NVL(SAL.last_update_date,SS_DATE )) BETWEEN SS_DATE AND EE_DATE 
AND SS_DATE>TRUNC(SAL.DATE_FROM)
AND PPOS.DATE_START =(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)
AND TRUNC(SAL.DATE_FROM) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
AND PPOS.ACTUAL_TERMINATION_DATE IS NULL



 )
where effective_start_date<effective_end_date
GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
SS_DATE,
EE_DATE,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
) */
/* UNION
(SELECT 'SAL_ADD' DESCR,
'A' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN SS_DATE
ELSE MIN(EFFECTIVE_START_DATE) END) START_DATE,

NVL(ACTUAL_TERMINATION_DATE,(CASE WHEN MAX(EFFECTIVE_END_DATE)>EE_DATE THEN EE_DATE 
ELSE MAX(EFFECTIVE_END_DATE) END)) END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE


FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE3,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
SAL.DATE_FROM EFFECTIVE_START_DATE,
SAL.DATE_TO   EFFECTIVE_END_DATE,
PAAF.NORMAL_HOURS,
FULL_PART_TIME,
SAL.SALARY_AMOUNT,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END SS_DATE,

CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+4
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END EE_DATE

FROM DUAL)
PAY_PERIOD,
CMP_SALARY SAL

WHERE SUBSTR(:P_PERIOD,6,2)='04'  and PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
							AND (
						(UPPER(TRIM(PPG1.SEGMENT2)) =UPPER(TRIM('TEACHERS'))) or
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('NOT JOINED - TEACHERS')),UPPER(TRIM('OPTED OUT - TEACHERS'))) and
						UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
--AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)

AND SAL.PERSON_ID=PAAF.PERSON_ID
AND SAL.ASSIGNMENT_ID=PAAF.ASSIGNMENT_ID

AND ((SS_DATE BETWEEN TRUNC(SAL.DATE_FROM) AND TRUNC(SAL.DATE_TO))
OR (EE_DATE BETWEEN TRUNC(SAL.DATE_FROM) AND TRUNC(SAL.DATE_TO))
OR (SS_DATE<TRUNC(SAL.DATE_FROM)
AND EE_DATE >TRUNC(SAL.DATE_TO)) 

)
--AND TRUNC(SAL.last_update_date) BETWEEN SS_DATE AND EE_DATE 

AND TRUNC(SAL.DATE_FROM) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
AND TRUNC(SAL.DATE_FROM)> TRUNC(PPOS.DATE_START)
AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)


 )

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
) */
union
(SELECT 'ELE_ADD' DESCR,
'A' ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
(CASE WHEN MIN(EFFECTIVE_START_DATE)<SS_DATE THEN SS_DATE
ELSE MIN(EFFECTIVE_START_DATE) END) START_DATE,

NVL(ACTUAL_TERMINATION_DATE,(CASE WHEN MAX(EFFECTIVE_END_DATE)>EE_DATE THEN EE_DATE 
ELSE MAX(EFFECTIVE_END_DATE) END)) END_DATE,

SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE


FROM
(SELECT 
'MSRM3060000'||TO_CHAR(SS_DATE,'MMYYYY') LOC ,
PAAF.PERSON_ID,
PAAF.ASSIGNMENT_NUMBER,
PAAF.ASSIGNMENT_ID,
NVL(PP.ATTRIBUTE1,'0000000') DFE_NUMBER,
PP.DATE_OF_BIRTH,
PPOS.ACTUAL_TERMINATION_DATE,
PAAF.PEOPLE_GROUP_ID,
/* (case when ELEMENT.START_DATE<ss_Date then ss_date
when ELEMENT.START_DATE between ss_date and ee_date then ELEMENT.START_DATE
end) */
ELEMENT.START_DATE EFFECTIVE_START_DATE,

ELEMENT.END_DATE EFFECTIVE_END_DATE,

PAAF.NORMAL_HOURS,
FULL_PART_TIME,
ELEMENT.SALARY_AMOUNT SALARY_AMOUNT,
SS_DATE,
EE_DATE,
NVL((DECODE(PAAf.ACTION_CODE,'END_ASG','END','')),

(DECODE((SELECT UPPER(USER_STATUS) FROM PER_ASSIGNMENT_STATUS_TYPES_TL PASTTL
WHERE PASTTL.ASSIGNMENT_STATUS_TYPE_ID(+) =
             paaf.ASSIGNMENT_STATUS_TYPE_ID
      AND PASTTL.BUSINESS_GROUP_ID(+) = paaf.BUSINESS_GROUP_ID
      AND PASTTL.LANGUAGE = USERENV ('LANG')
	  AND PASTTL.SOURCE_LANG = USERENV ('LANG')
	  ),'TERMINATE ASSIGNMENT','TERMINATE ASSIGNMENT','')))
ASSIGNMENT_STATUS_TYPE

FROM PER_ALL_ASSIGNMENTS_M PAAF,
PER_PERSONS PP,
PER_PERIODS_OF_SERVICE PPOS,
(SELECT 
(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
ELSE (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) SS_DATE,

(CASE WHEN SUBSTR(:P_PERIOD,6,2)='04' THEN (TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))+4
ELSE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) END) EE_DATE

FROM DUAL)
PAY_PERIOD,
(
SELECT
(CASE WHEN prr.PAYROLL_ASSIGNMENT_ID IS NOT NULL THEN PAAF.ASSIGNMENT_ID ELSE 
(SELECT PAAF1.ASSIGNMENT_ID
FROM PER_ALL_ASSIGNMENTS_F PAAF1
WHERE PAAF1.PERSON_ID=PAAF.PERSON_ID
AND UPPER(TRIM(PAAF1.PRIMARY_FLAG))=upper(trim('Y'))
AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE)
) END) ASSIGNMENT_ID,
(case when Subtract_or_Add='ADD' then to_number(prrv.result_value,'999999.99') else prrv.result_value*(-1) end) salary_amount,
TRUNC(nvl(prr.START_DATE,ptp.start_date)) start_date,
TRUNC(nvl(prr.end_date,ptp.end_date)) end_date,
pett.element_name,
pivt.name,
ppa.last_update_date

       FROM PAY_PAYROLL_ACTIONS PPA,
                           PAY_PAYROLL_REL_ACTIONS PPRA,
                           PAY_PAYROLL_ASSIGNMENTS PPACT,
                           PAY_INPUT_VALUES_TL PIVT,
                           PAY_INPUT_VALUES_F PIVF,
                           PAY_ELEMENT_TYPES_F PETF,
                           PAY_ELEMENT_TYPES_TL PETT,
                           PAY_RUN_RESULTS PRR,
                           PAY_RUN_RESULT_VALUES PRRV,
						   PAY_TIME_PERIODS PTP,
						   PAY_ALL_PAYROLLS_F PAF,
						   PER_ALL_ASSIGNMENTS_F PAAF,
						   (SELECT 
								pbt.balance_type_id,
								pbt.balance_name,
								DECODE (pbf.scale,  1, 'ADD',  -1, 'SUBTRACT',  NULL) Subtract_or_Add,
								pivf.name input_value,
								petf.element_name,
								pbt.legislation_code
								FROM 
								pay_balance_types_vl pbt,
									PAY_INPUT_VALUES_vL pivf,
									PAY_ELEMENT_TYPES_vL petf,
								pay_balance_feeds_f pbf,
								PER_LEGISLATIVE_DATA_GROUPS_VL LDG
								WHERE PBF.BALANCE_TYPE_ID=PBT.BALANCE_TYPE_ID   
								--1=1
								AND NVL (PBF.LEGISLATION_CODE, LDG.LEGISLATION_CODE) =
								LDG.LEGISLATION_CODE
								AND NVL (PBF.LEGISLATIVE_DATA_GROUP_ID, LDG.LEGISLATIVE_DATA_GROUP_ID) =
								LDG.LEGISLATIVE_DATA_GROUP_ID
									AND UPPER(TRIM(LDG.legislation_code)) = 'GB'
								AND pbf.element_type_id = petf.element_type_id(+)
								AND pbf.input_value_id = pivf.input_value_id(+)	
								AND LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) BETWEEN NVL(pbf.effective_start_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))) AND NVL(pbf.effective_end_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')))
								AND LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) BETWEEN NVL(pivf.effective_start_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))) AND NVL(pivf.effective_end_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')))
								AND LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) BETWEEN NVL(petf.effective_start_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))) AND NVL(petf.effective_end_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')))
								AND upper(pbt.balance_name) = 'TPA SALARY'
								--and upper(pivf.name)<>upper('Basic_Annual')
								ORDER BY pbt.balance_name
						   )
						   b_e_list
						   
                     WHERE   TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PPACT.START_DATE) AND TRUNC(PPACT.END_DATE)
					        AND PRRV.RUN_RESULT_ID = PRR.RUN_RESULT_ID
                           AND PIVF.INPUT_VALUE_ID = PRRV.INPUT_VALUE_ID
                           AND PRR.ELEMENT_TYPE_ID = PETT.ELEMENT_TYPE_ID
                           AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PETF.EFFECTIVE_START_DATE) AND TRUNC(PETF.EFFECTIVE_END_DATE)
                           AND PETT.LANGUAGE = USERENV('LANG')
						    AND PETT.SOURCE_LANG = USERENV('LANG')
                           AND PETT.ELEMENT_TYPE_ID = PETF.ELEMENT_TYPE_ID
                           AND PIVF.INPUT_VALUE_ID = PIVT.INPUT_VALUE_ID
                           AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PIVF.EFFECTIVE_START_DATE) AND TRUNC(PIVF.EFFECTIVE_END_DATE)
                           AND PIVT.LANGUAGE = USERENV('LANG')
						   AND PIVT.SOURCE_LANG = USERENV('LANG')
                          AND PIVF.ELEMENT_TYPE_ID = PETF.ELEMENT_TYPE_ID
                           AND PRR.PAYROLL_REL_ACTION_ID =
                                  PPRA.PAYROLL_REL_ACTION_ID
                           AND PPA.PAYROLL_ACTION_ID = PPRA.PAYROLL_ACTION_ID
						  AND PPRA.PAYROLL_RELATIONSHIP_ID=PPACT.PAYROLL_RELATIONSHIP_ID
						AND NVL(PRR.PAYROLL_ASSIGNMENT_ID,PPACT.PAYROLL_ASSIGNMENT_ID)=PPACT.PAYROLL_ASSIGNMENT_ID
						AND NVL(PRR.PAYROLL_TERM_ID,PPACT.PAYROLL_TERM_ID)=PPACT.PAYROLL_TERM_ID
						AND PAAF.ASSIGNMENT_ID=PPACT.HR_ASSIGNMENT_ID
						AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
                           AND PPRA.RETRO_COMPONENT_ID IS NULL
						   AND PTP.PAYROLL_ID=PPA.PAYROLL_ID
						   AND PTP.TIME_PERIOD_ID=PPA.EARN_TIME_PERIOD_ID
						   AND PTP.PERIOD_CATEGORY='E'
						   AND PAF.PAYROLL_ID = PPA.PAYROLL_ID
						   AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PAF.EFFECTIVE_START_DATE) AND TRUNC(PAF.EFFECTIVE_END_DATE)
						   AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PTP.START_DATE) AND TRUNC(PTP.END_DATE)
					      and PETT.element_name in (b_e_list.element_name)
						   AND UPPER(TRIM(PRR.STATUS))=UPPER(TRIM('P'))
						   and ptp.start_date=(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
						   and ptp.end_date=last_day((TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')))
						   AND PIVT.NAME in (b_e_list.input_value)
						   AND prr.START_DATE IS NOT NULL 
						   AND prr.END_DATE IS NOT NULL
)
ELEMENT

where SUBSTR(:P_PERIOD,6,2)='04' 
and PAAF.PERSON_ID=PP.PERSON_ID(+)
AND PPOS.PERSON_ID(+) = PAAF.PERSON_ID
AND PPOS.PERIOD_OF_SERVICE_ID(+) = PAAF.PERIOD_OF_SERVICE_ID
--AND UPPER(TRIM(PAAF.PRIMARY_FLAG))=UPPER(TRIM('Y'))
 AND UPPER(TRIM(PAAF.ASSIGNMENT_TYPE))=UPPER('E')
AND UPPER(TRIM(PAAF.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
AND PAAF.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
							AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(PAAF.EFFECTIVE_START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
AND TRUNC(ELEMENT.START_DATE) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)

AND ((SS_DATE BETWEEN TRUNC(ELEMENT.START_DATE) AND TRUNC(ELEMENT.end_DATE))
OR (EE_DATE BETWEEN TRUNC(ELEMENT.START_DATE) AND TRUNC(ELEMENT.end_DATE))
)

AND ELEMENT.ASSIGNMENT_ID=PAAF.ASSIGNMENT_ID

AND PPOS.DATE_START=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)
)

GROUP BY LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE
)
) ALL_COM
)

ORDER BY ASSIGNMENT_NUMBER,START_DATE,END_DATE
)

GROUP BY ADD_UPDATE,
LOC,
PERSON_ID,
ASSIGNMENT_ID,
ASSIGNMENT_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
ACTUAL_TERMINATION_DATE,
--NORMAL_HOURS,
FULL_PART_TIME,
SS_DATE,
EE_DATE,
WITHDRAWN_STATUS,
D_EXC,
M_S_DATE,
M_E_DATE,
START_DATE,
END_DATE,
SALARY_AMOUNT,
ASSIGNMENT_STATUS_TYPE/* ,
N_S_DATE,
P_S_DATE,
N_E_DATE,
P_E_DATE,
S_DATE, 
E_DATE */
--ORDER BY ASSIGNMENT_NUMBER,START_DATE
)
) COMBINED


WHERE  COMBINED.ASSIGNMENT_ID =(
						SELECT DISTINCT PPACT.ASSIGNMENT_ID 
						FROM PAY_PAYROLL_ACTIONS PPA,
						PAY_PAYROLL_REL_ACTIONS PPRA,
						PAY_REL_GROUPS_DN PPACT,
						PAY_TIME_PERIODS PTP
						WHERE
						    TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PPACT.START_DATE) AND TRUNC(PPACT.END_DATE)
							AND COMBINED.ASSIGNMENT_ID=PPACT.ASSIGNMENT_ID
					       AND PPA.PAYROLL_ACTION_ID = PPRA.PAYROLL_ACTION_ID                           
                           AND PPRA.PAYROLL_RELATIONSHIP_ID(+)=PPACT.PAYROLL_RELATIONSHIP_ID
                           AND PPRA.RETRO_COMPONENT_ID IS NULL
						   AND PPACT.GROUP_TYPE(+) = 'A'
						   AND PTP.PAYROLL_ID=PPA.PAYROLL_ID
						   AND PTP.TIME_PERIOD_ID=PPA.EARN_TIME_PERIOD_ID
						   AND UPPER(TRIM(PPA.ACTION_TYPE)) IN (UPPER(TRIM('Q')),UPPER(TRIM('R')))
						   AND PTP.PERIOD_CATEGORY='E'
						   AND PTP.START_DATE=TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')
						   AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PTP.START_DATE) AND TRUNC(PTP.END_DATE)
) 
AND  COMBINED.START_DATE<=NVL(COMBINED.ACTUAL_TERMINATION_DATE,COMBINED.START_DATE)
AND COMBINED.START_DATE<=COMBINED.END_DATE
GROUP BY 
COMBINED.ADD_UPDATE,
COMBINED.LOC,
COMBINED.PERSON_ID,
COMBINED.ASSIGNMENT_ID,
COMBINED.ASSIGNMENT_NUMBER,
COMBINED.DFE_NUMBER,
COMBINED.DATE_OF_BIRTH,
COMBINED.ACTUAL_TERMINATION_DATE,
COMBINED.FULL_PART_TIME,
COMBINED.WITHDRAWN_STATUS,
COMBINED.D_EXC,
COMBINED.M_S_DATE,
COMBINED.M_E_DATE,
COMBINED.START_DATE,
COMBINED.END_DATE,
COMBINED.SS_DATE,
COMBINED.EE_DATE,
COMBINED.ASSIGNMENT_STATUS_TYPE,
COMBINED.SALARY_AMOUNT/* ,
N_S_DATE,
P_S_DATE,
N_E_DATE,
P_E_DATE,
S_DATE,
E_DATE */
) ALL_COMBINE,
(select ADDR_H.ADDRESS_LINE_1 HOME_ADDRESS_LINE_1,
ADDR_H.ADDRESS_LINE_2 HOME_ADDRESS_LINE_2,
ADDR_H.ADDRESS_LINE_3 HOME_ADDRESS_LINE_3,
ADDR_H.TOWN_OR_CITY HOME_ADDRESS_LINE_4,
'' HOME_ADDRESS_LINE_5,
ADDR_H.POSTAL_CODE,
ADDR_U_H.person_id
from PER_PERSON_ADDR_USAGES_F ADDR_U_H,
PER_ADDRESSES_F ADDR_H
where UPPER(TRIM(ADDR_U_H.ADDRESS_TYPE(+)))=UPPER(TRIM('HOME'))
AND ADDR_H.ADDRESS_ID(+) = ADDR_U_H.ADDRESS_ID
AND TRUNC (sysdate) BETWEEN NVL (ADDR_U_H.EFFECTIVE_START_DATE(+),sysdate) AND NVL (ADDR_U_H.EFFECTIVE_END_DATE(+),sysdate)
AND TRUNC (sysdate) BETWEEN NVL (ADDR_H.EFFECTIVE_START_DATE(+),sysdate) AND NVL (ADDR_H.EFFECTIVE_END_DATE(+),sysdate)
)
address,
(select DECODE (PPLF.SEX,  'M', 'MALE',  'F', 'FEMALE',  PPLF.SEX) GENDER,
DECODE (PPLF.SEX,  'M', '1',  'F', '2',  PPLF.SEX) GENDER_CODE,
pplf.person_id
from PER_PEOPLE_LEGISLATIVE_F PPLF
where TRUNC (sysdate) BETWEEN NVL (PPLF.EFFECTIVE_START_DATE(+),sysdate) AND NVL (PPLF.EFFECTIVE_END_DATE(+), sysdate)
)
gender,
(SELECT MAX(PPOS1.DATE_START) hire_date,ppos1.person_id FROM PER_PERIODS_OF_SERVICE PPOS1 group by PPOS1.PERSON_ID) ppos

where address.person_id(+)=all_combine.person_id
and gender.person_id(+)=all_combine.person_id
and ppos.person_id=all_combine.person_id
-- and NVL(ALL_COMBINE.LOCAL_AUTH_NUMBER,1)=209 --NVL(:P_LAN,NVL(ALL_COMBINE.LOCAL_AUTH_NUMBER,1))
-- and ALL_COMBINE.LOCAL_AUTH_NUMBER IS NOT NULL

GROUP BY ALL_COMBINE.ADD_UPDATE,
ALL_COMBINE.LOC,
ALL_COMBINE.PERSON_ID,
ALL_COMBINE.ASSIGNMENT_ID,
ALL_COMBINE.ASSIGNMENT_NUMBER,
ALL_COMBINE.DFE_NUMBER,
ALL_COMBINE.DATE_OF_BIRTH,
ALL_COMBINE.LOCAL_AUTH_NUMBER,
ALL_COMBINE.ACTUAL_TERMINATION_DATE,
ALL_COMBINE.FULL_PART_TIME,
ALL_COMBINE.WITHDRAWN_STATUS,
ALL_COMBINE.D_EXC,
ALL_COMBINE.M_S_DATE,
ALL_COMBINE.M_E_DATE,
ALL_COMBINE.START_DATE,
ALL_COMBINE.SS_DATE,
ALL_COMBINE.EE_DATE,
ALL_COMBINE.CON_TYPE,
ALL_COMBINE.ASSIGNMENT_STATUS_TYPE,
address.HOME_ADDRESS_LINE_1,
address.HOME_ADDRESS_LINE_2,
address.HOME_ADDRESS_LINE_3,
address.HOME_ADDRESS_LINE_4,
address.HOME_ADDRESS_LINE_5,
address.postal_code,
gender.gender,
gender.gender_code,
ppos.hire_date
)
all_final
where (all_final.WITHDRAWN_COND IS NULL OR all_final.END_DATE<=LAST_DAY(all_final.WITHDRAWN_COND))
)
ALL_CON,
(SELECT COUNT(DISTINCT PAAF.ASSIGNMENT_ID) A_ID,PAAF.PERSON_ID FROM PER_ALL_ASSIGNMENTS_F PAAF
WHERE LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
AND PAAF.ASSIGNMENT_TYPE='E'
AND PAAF.EFFECTIVE_LATEST_CHANGE='Y'
group by PAAF.PERSON_ID
)
PAAF_NEW

where PAAF_NEW.person_id=all_con.person_id
group by 
ALL_CON.con_check,
total_days,
m_days,
divi,
start_date,
end_Date,
M_S_DATE,
M_E_DATE,
ASSIGNMENT_STATUS_TYPE,
ADD_UPDATE,
loc,
ALL_CON.PERSON_ID,
PAAF_NEW.A_ID,
ASSIGNMENT_ID,
ASSIGNMENT_number,
last_name,
first_name,
ESTABLISHMENT_NUMBER,
NATIONAL_IDENTIFIER_NUMBER,
DFE_NUMBER,
DATE_OF_BIRTH,
LOCAL_AUTH_NUMBER,
EMPLOYEEEMAIL,
HOME_ADDRESS_LINE_1,
HOME_ADDRESS_LINE_2,
HOME_ADDRESS_LINE_3,
HOME_ADDRESS_LINE_4,
HOME_ADDRESS_LINE_5,
ACTUAL_TERMINATION_DATE,
GENDER,
gender_code,
FULL_PART_TIME,
WITHDRAWN_STATUS,
WITHDRAWN_COND,
POSTAL_CODE,
D_EXC,
SS_DATE,
EE_DATE
)
ALL_LAST,
(SELECT paaf.person_id,
(CASE WHEN prr.PAYROLL_ASSIGNMENT_ID IS NOT NULL THEN PAAF.ASSIGNMENT_ID ELSE 
(SELECT PAAF1.ASSIGNMENT_ID
FROM PER_ALL_ASSIGNMENTS_F PAAF1
WHERE PAAF1.PERSON_ID=PAAF.PERSON_ID
AND UPPER(TRIM(PAAF1.PRIMARY_FLAG))=upper(trim('Y'))
AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE)
) END) ASSIGNMENT_ID,
(case when Subtract_or_Add='ADD' then to_number(prrv.result_value,'999999.99') else prrv.result_value*(-1) end) salary_amount,
nvl(prr.START_DATE,ptp.start_date) start_date,
nvl(prr.end_date,ptp.end_date) end_date,
ptp.start_date s_date,
ptp.end_Date e_date

       FROM PAY_PAYROLL_ACTIONS PPA,
                           PAY_PAYROLL_REL_ACTIONS PPRA,
                           PAY_PAYROLL_ASSIGNMENTS PPACT,
                           PAY_INPUT_VALUES_TL PIVT,
                           PAY_INPUT_VALUES_F PIVF,
                           PAY_ELEMENT_TYPES_F PETF,
                           PAY_ELEMENT_TYPES_TL PETT,
                           PAY_RUN_RESULTS PRR,
                           PAY_RUN_RESULT_VALUES PRRV,
						   PAY_TIME_PERIODS PTP,
						   PAY_ALL_PAYROLLS_F PAF,
						   PER_ALL_ASSIGNMENTS_F PAAF,
						   (SELECT 
								pbt.balance_type_id,
								pbt.balance_name,
								DECODE (pbf.scale,  1, 'ADD',  -1, 'SUBTRACT',  NULL) Subtract_or_Add,
								pivf.name input_value,
								petf.element_name,
								pbt.legislation_code
								FROM 
								pay_balance_types_vl pbt,
									PAY_INPUT_VALUES_vL pivf,
									PAY_ELEMENT_TYPES_vL petf,
								pay_balance_feeds_f pbf,
								PER_LEGISLATIVE_DATA_GROUPS_VL LDG
								WHERE PBF.BALANCE_TYPE_ID=PBT.BALANCE_TYPE_ID   
								--1=1
								AND NVL (PBF.LEGISLATION_CODE, LDG.LEGISLATION_CODE) =
								LDG.LEGISLATION_CODE
								AND NVL (PBF.LEGISLATIVE_DATA_GROUP_ID, LDG.LEGISLATIVE_DATA_GROUP_ID) =
								LDG.LEGISLATIVE_DATA_GROUP_ID
									AND UPPER(TRIM(LDG.legislation_code)) = 'GB'
								AND pbf.element_type_id = petf.element_type_id(+)
								AND pbf.input_value_id = pivf.input_value_id(+)	
								AND LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) BETWEEN NVL(pbf.effective_start_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))) AND NVL(pbf.effective_end_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')))
								AND LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) BETWEEN NVL(pivf.effective_start_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))) AND NVL(pivf.effective_end_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')))
								AND LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')) BETWEEN NVL(petf.effective_start_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))) AND NVL(petf.effective_end_date,LAST_DAY(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD')))
								AND upper(pbt.balance_name) = 'TPA SALARY'
								--and upper(pivf.name)<>upper('Basic_Annual')
								ORDER BY pbt.balance_name
						   )
						   b_e_list
						   
                     WHERE   TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PPACT.START_DATE) AND TRUNC(PPACT.END_DATE)
					        AND PRRV.RUN_RESULT_ID = PRR.RUN_RESULT_ID
                           AND PIVF.INPUT_VALUE_ID = PRRV.INPUT_VALUE_ID
                           AND PRR.ELEMENT_TYPE_ID = PETT.ELEMENT_TYPE_ID
                           AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PETF.EFFECTIVE_START_DATE) AND TRUNC(PETF.EFFECTIVE_END_DATE)
                           AND PETT.LANGUAGE = USERENV('LANG')
						    AND PETT.SOURCE_LANG = USERENV('LANG')
                           AND PETT.ELEMENT_TYPE_ID = PETF.ELEMENT_TYPE_ID
                           AND PIVF.INPUT_VALUE_ID = PIVT.INPUT_VALUE_ID
                           AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PIVF.EFFECTIVE_START_DATE) AND TRUNC(PIVF.EFFECTIVE_END_DATE)
                           AND PIVT.LANGUAGE = USERENV('LANG')
						   AND PIVT.SOURCE_LANG = USERENV('LANG')
                          AND PIVF.ELEMENT_TYPE_ID = PETF.ELEMENT_TYPE_ID
                           AND PRR.PAYROLL_REL_ACTION_ID =
                                  PPRA.PAYROLL_REL_ACTION_ID
                           AND PPA.PAYROLL_ACTION_ID = PPRA.PAYROLL_ACTION_ID
						  AND PPRA.PAYROLL_RELATIONSHIP_ID=PPACT.PAYROLL_RELATIONSHIP_ID
						AND NVL(PRR.PAYROLL_ASSIGNMENT_ID,PPACT.PAYROLL_ASSIGNMENT_ID)=PPACT.PAYROLL_ASSIGNMENT_ID
						AND NVL(PRR.PAYROLL_TERM_ID,PPACT.PAYROLL_TERM_ID)=PPACT.PAYROLL_TERM_ID

						AND PAAF.ASSIGNMENT_ID=PPACT.HR_ASSIGNMENT_ID
						AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PAAF.EFFECTIVE_START_DATE) AND TRUNC(PAAF.EFFECTIVE_END_DATE)
                           AND PPRA.RETRO_COMPONENT_ID IS NULL
						   AND PTP.PAYROLL_ID=PPA.PAYROLL_ID
						   AND PTP.TIME_PERIOD_ID=PPA.EARN_TIME_PERIOD_ID
						   AND PTP.PERIOD_CATEGORY='E'
						   AND PAF.PAYROLL_ID = PPA.PAYROLL_ID
						   AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PAF.EFFECTIVE_START_DATE) AND TRUNC(PAF.EFFECTIVE_END_DATE)
						   AND TRUNC(PPA.DATE_EARNED) BETWEEN TRUNC(PTP.START_DATE) AND TRUNC(PTP.END_DATE)
					      and PETT.element_name in (b_e_list.element_name)
						   AND UPPER(TRIM(PRR.STATUS))=UPPER(TRIM('P'))
						  /*  and ptp.start_date=(TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))
						   and ptp.end_date=last_day((TO_DATE(SUBSTR(:P_PERIOD,1,10),'YYYY-MM-DD'))) */
						   AND PIVT.NAME in (b_e_list.input_value)
)						  
payroll_run 
where 
-- ESTABLISHMENT_NUMBER is not null
-- AND 
(all_last.WITHDRAWN_COND IS NULL OR all_last.END_DATE<=LAST_DAY(all_last.WITHDRAWN_COND))
 --and (ALL_LAST.ASSIGNMENT_NUMBER LIKE '%T00046%')--'%511315%' --'%T00108%' 
/*or ALL_LAST.ASSIGNMENT_NUMBER LIKE '%006786%'
 or ALL_LAST.ASSIGNMENT_NUMBER LIKE '%1001664%'
or ALL_LAST.ASSIGNMENT_NUMBER LIKE '%477608%'
or ALL_LAST.ASSIGNMENT_NUMBER LIKE '%450355%' 
or ALL_LAST.ASSIGNMENT_NUMBER LIKE '%493917%' 
) */
--AND ALL_LAST.ASSIGNMENT_NUMBER LIKE '%T00046%'
AND ALL_LAST.assignment_id IN (SELECT PAAF1.assignment_id
						FROM PER_ALL_ASSIGNMENTS_M PAAF1,
						PER_PEOPLE_GROUPS PPG1
						
						WHERE PAAF1.PEOPLE_GROUP_ID=PPG1.PEOPLE_GROUP_ID
						AND UPPER(TRIM(PPG1	.ENABLED_FLAG(+)))=UPPER(TRIM('Y'))
						AND UPPER(TRIM(PAAF1.EFFECTIVE_LATEST_CHANGE))=UPPER(TRIM('Y'))
							AND (
						(UPPER(TRIM(PPG1.SEGMENT5)) =UPPER(TRIM('YES'))) AND
						(UPPER(TRIM(PPG1.SEGMENT2)) in (UPPER(TRIM('TPA')),UPPER(TRIM('Opted Out'))) 
						-- and
						-- UPPER(TRIM(PPG1.SEGMENT1)) not in (UPPER(TRIM('NJC Grade 11+')),UPPER(TRIM('NJC')))
						)
						)
						AND TRUNC(ALL_LAST.START_DATE) BETWEEN TRUNC(PAAF1.EFFECTIVE_START_DATE) AND TRUNC(PAAF1.EFFECTIVE_END_DATE))
and payroll_run.person_id(+)=all_last.person_id
and payroll_run.assignment_id(+)=all_last.assignment_id	
and trunc(all_last.start_date) between trunc(payroll_run.s_date(+)) and trunc(payroll_run.e_date(+))					
AND all_last.PERSON_ID = (
		SELECT DISTINCT person_id
		FROM per_all_people_f
		WHERE person_number = '500877'
		)					
									
GROUP BY  all_last.PERSON_ID,
all_last.ASSIGNMENT_ID,
all_last.ASSIGNMENT_NUMBER,
all_last.CON_CHECK,
all_last.CON_COUNT,
all_last.TOTAL_DAYS,
all_last.M_DAYS,
all_last.divi,
all_last.start_date,
all_last.end_Date,
all_last.M_S_DATE,
all_last.M_E_DATE,
all_last.ASSIGNMENT_STATUS_TYPE,
all_last.ADD_UPDATE,
all_last.loc,
all_last.last_name,
all_last.first_name,
all_last.ESTABLISHMENT_NUMBER,
all_last.NATIONAL_IDENTIFIER_NUMBER,
all_last.DFE_NUMBER,
all_last.DATE_OF_BIRTH,
all_last.LOCAL_AUTH_NUMBER,
all_last.EMPLOYEEEMAIL,
all_last.HOME_ADDRESS_LINE_1,
all_last.HOME_ADDRESS_LINE_2,
all_last.HOME_ADDRESS_LINE_3,
all_last.HOME_ADDRESS_LINE_4,
all_last.HOME_ADDRESS_LINE_5,
all_last.ACTUAL_TERMINATION_DATE,
all_last.GENDER,
all_last.gender_code,
all_last.FULL_PART_TIME,
all_last.WITHDRAWN_STATUS,
all_last.WITHDRAWN_COND,
all_last.POSTAL_CODE,
all_last.SS_DATE,
all_last.EE_DATE,
all_last.FT_PT,
all_last.con_cond
ORDER BY all_last.assignment_id,all_last.START_DATE,all_last.END_DATE
SELECT * FROM 
(
(select
person_id,
end_date,
start_date,
(case when floor(sum(days_worked))>TO_NUMBER(TO_CHAR(LAST_DAY(END_DATE),'DD'),'99') then TO_NUMBER(TO_CHAR(LAST_DAY(END_DATE),'DD'),'99') else floor(sum(days_worked)) end) d_worked,
round(sum(per),2) per,
round(sum(pt_salary),2) kk,
sum(tpa) tp,
SUM(PEN_PAY) PEN_PAY,
(100/COUNT(ASSIGNMENT_ID)) avg1,
(case when sum(per)=0
then  /* (case when CEIL(round( (sum(tpa)/(100/COUNT(ASSIGNMENT_ID))),2))-round( (sum(tpa)/(100/COUNT(ASSIGNMENT_ID))),2)<.50 then CEIL(round( (sum(tpa)/(100/COUNT(ASSIGNMENT_ID))),2)) 
			else /* floor(round( (sum(tpa)/(100/COUNT(ASSIGNMENT_ID))),2)) 	
			
			end) */
			(round( (sum(tpa)/(100/COUNT(ASSIGNMENT_ID))),2))
else 
/*  (case when CEIL(round( (sum(pt_salary)/sum(per)),2))-round( (sum(pt_salary)/sum(per)),2)<.50 then CEIL(round( (sum(pt_salary)/sum(per)),2))
			else floor(round( (sum(pt_salary)/sum(per)),2))	end)  */
			round( (sum(pt_salary)/sum(per)),2)
			
end) fte_salary,
(case when floor(sum(days_worked))>TO_NUMBER(TO_CHAR(LAST_DAY(END_DATE),'DD'),'99') then TO_NUMBER(TO_CHAR(LAST_DAY(END_DATE),'DD'),'99') else floor(sum(days_worked)) end) d_exc

from
(select 
person_id,
end_date,
start_date,
assignment_id,
assignment_number,
(pen_pay*(end_date-start_date+1)/TO_NUMBER(TO_CHAR(LAST_DAY(END_DATE),'DD'),'99')) PEN_PAY,
tpa,
end_date-start_date+1 t_m_days,
(case when tpa<>0 then ((pen_pay*(end_date-start_date+1)/TO_NUMBER(TO_CHAR(LAST_DAY(END_DATE),'DD'),'99'))/tpa)*365 end) days_worked,
((case when tpa<>0 then ((pen_pay*(end_date-start_date+1)/TO_NUMBER(TO_CHAR(LAST_DAY(END_DATE),'DD'),'99'))/tpa)*365 end)/(end_date-start_date+1)) per,
(tpa*(((case when tpa<>0 then ((pen_pay*(end_date-start_date+1)/TO_NUMBER(TO_CHAR(LAST_DAY(END_DATE),'DD'),'99'))/tpa)*365 end)/(end_date-start_date+1))*100)/100) pt_salary

from

(
	SELECT
     	 paaf.person_id,
			CASE WHEN TO_CHAR(PTP.START_DATE,'MM')='04' THEN PTP.START_DATE+5 ELSE PTP.START_DATE END START_DATE,
			CASE WHEN TO_CHAR(PTP.START_DATE,'MM')='04' THEN PTP.END_DATE ELSE PTP.END_DATE END END_DATE,
			PAAF.ASSIGNMENT_ID,
			paaf.assignment_number,
			SUM(CASE WHEN UPPER (TRIM (BAL1.BALANCE_NAME)) = upper(trim('Teachers Pensionable Pay Employee') ) THEN  BAL1.VALUE1 END) PEN_PAY,
			SUM(CASE WHEN UPPER (TRIM (BAL1.BALANCE_NAME)) = upper(trim('TPA Salary') ) THEN  BAL1.VALUE1 END) TPA			
			
        FROM
            pay_payroll_rel_actions pra,
            pay_payroll_actions ppa,
            pay_payroll_assignments ppa1, 
			PAY_DEFINED_BALANCES PDB,
			PAY_DIMENSION_USAGES PDU,
			pay_time_periods ptp,
			PER_PERIODS_OF_SERVICE PPOS,
			per_all_assignments_f paaf,
			TABLE ( pay_balance_view_pkg.get_balance_matrix( p_balance_group_usage_id => ( SELECT  bal_grp_usage_id
                                                                                  FROM pay_bal_grp_usages
                                                                                WHERE UPPER(base_group_usage_name) = UPPER('MDC_GROUP'))
                                                        ,p_payroll_rel_action_id  => pra.payroll_rel_action_id
                                                        ,p_payroll_assignment_id => ppa1.payroll_assignment_id)) bal1
		WHERE  pra.payroll_relationship_id = PPA1.payroll_relationship_id
            AND   EXISTS (
                SELECT
                    1
                FROM
                    pay_run_results prr
                WHERE
                    prr.payroll_rel_action_id = pra.payroll_rel_action_id
            )
            AND   ppa.payroll_action_id = pra.payroll_action_id
            AND   upper(TRIM(ppa.action_type) ) IN (
                upper(TRIM('I') ),
                upper(TRIM('R') ),
                upper(TRIM('Q') )
            ) -- Balance initialization 
			and bal1.PAYROLL_REL_ACTION_ID = pra.payroll_rel_action_id
			
            AND   pra.retro_component_id IS NULL
			AND PDB.DEFINED_BALANCE_ID=	BAL1.DEFBAL_ID1
			AND PDB.BALANCE_DIMENSION_ID=PDU.BALANCE_DIMENSION_ID
			AND PDU.LEGISLATION_CODE='GB'
			 AND   ppa.payroll_id = ptp.payroll_id
    AND   ptp.time_period_id = ppa.earn_time_period_id
    AND   ptp.period_category = 'E'
    AND   trunc( ppa.date_earned ) BETWEEN trunc( ptp.start_date ) AND trunc( ptp.end_date )
		AND PPOS.PERSON_ID=ppa1.PERSON_ID
	 AND   paaf.person_id = ppa1.person_id
    AND   paaf.assignment_id = ppa1.hr_assignment_id
    AND   ( ppa.date_earned ) BETWEEN ( paaf.effective_start_date ) AND ( paaf.effective_end_date )
    AND   upper(TRIM(paaf.assignment_type) ) = upper(TRIM('e') )
    AND   upper(TRIM(paaf.effective_latest_change) ) = upper(TRIM('y') )
 AND PPOS.PERSON_ID=PAAF.PERSON_ID
	AND PPOS.PERIOD_OF_SERVICE_ID=PAAF.PERIOD_OF_SERVICE_ID
	--AND (PPOS.DATE_START)=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)
	/* and (paaf.assignment_number like '%511315%'
	or paaf.assignment_number like '%006786%') */
	AND (PPOS.DATE_START)=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)
group by    paaf.person_id,
			ptp.end_date,
			ptp.START_DATE,
			PAAF.ASSIGNMENT_ID,
			paaf.assignment_number
			))
group by person_id,
end_date,
start_date,
t_m_days
)
UNION
(select
person_id,
end_date,
start_date,
floor(sum(days_worked)) d_worked,
round(sum(per),2) per,
round(sum(pt_salary),2) kk,
sum(tpa) tp,
SUM(PEN_PAY) PEN_PAY,
(100/COUNT(ASSIGNMENT_ID)) avg1,
(case when sum(per)=0
then  (case when CEIL(round( (sum(tpa)/(100/COUNT(ASSIGNMENT_ID))),2))-round( (sum(tpa)/(100/COUNT(ASSIGNMENT_ID))),2)<.50 then CEIL(round( (sum(tpa)/(100/COUNT(ASSIGNMENT_ID))),2))
			else floor(round( (sum(tpa)/(100/COUNT(ASSIGNMENT_ID))),2))	end) 
else 
 (case when CEIL(round( (sum(pt_salary)/sum(per)),2))-round( (sum(pt_salary)/sum(per)),2)<.50 then CEIL(round( (sum(pt_salary)/sum(per)),2))
			else floor(round( (sum(pt_salary)/sum(per)),2))	end) 
			
end) fte_salary,
floor(sum(days_worked))  d_exc

from
(select 
person_id,
end_date,
start_date,
assignment_id,
assignment_number,
(pen_pay*(end_date-start_date+1)/TO_NUMBER(TO_CHAR(LAST_DAY(END_DATE),'DD'),'99')) PEN_PAY,
tpa,
end_date-start_date+1 t_m_days,
(case when tpa<>0 then ((pen_pay*(end_date-start_date+1)/TO_NUMBER(TO_CHAR(LAST_DAY(END_DATE),'DD'),'99'))/tpa)*365 end) days_worked,
((case when tpa<>0 then ((pen_pay*(end_date-start_date+1)/TO_NUMBER(TO_CHAR(LAST_DAY(END_DATE),'DD'),'99'))/tpa)*365 end)/(end_date-start_date+1)) per,
(tpa*(((case when tpa<>0 then ((pen_pay*(end_date-start_date+1)/TO_NUMBER(TO_CHAR(LAST_DAY(END_DATE),'DD'),'99'))/tpa)*365 end)/(end_date-start_date+1))*100)/100) pt_salary

from

(SELECT
     	 paaf.person_id,
			CASE WHEN TO_CHAR(PTP.START_DATE,'MM')='04' THEN PTP.START_DATE ELSE PTP.START_DATE END START_DATE,
			CASE WHEN TO_CHAR(PTP.START_DATE,'MM')='04' THEN PTP.START_DATE+4 ELSE PTP.END_DATE END END_DATE,
			PAAF.ASSIGNMENT_ID,
			paaf.assignment_number,
			SUM(CASE WHEN UPPER (TRIM (BAL1.BALANCE_NAME)) = upper(trim('Teachers Pensionable Pay Employee') ) THEN BAL1.VALUE1 END) PEN_PAY,
			SUM(CASE WHEN UPPER (TRIM (BAL1.BALANCE_NAME)) = upper(trim('TPA Salary') ) THEN BAL1.VALUE1 END) TPA
FROM
    pay_payroll_rel_actions pra,
            pay_payroll_actions ppa,
            pay_payroll_assignments ppa1, 
			PAY_DEFINED_BALANCES PDB,
			PAY_DIMENSION_USAGES PDU,
			pay_time_periods ptp,
			PER_PERIODS_OF_SERVICE PPOS,
			per_all_assignments_f paaf,
			TABLE ( pay_balance_view_pkg.get_balance_matrix( p_balance_group_usage_id => ( SELECT  bal_grp_usage_id
                                                                                  FROM pay_bal_grp_usages
                                                                                WHERE UPPER(base_group_usage_name) = UPPER('MDC_GROUP'))
                                                        ,p_payroll_rel_action_id  => pra.payroll_rel_action_id
                                                        ,p_payroll_assignment_id => ppa1.payroll_assignment_id)) bal1
		WHERE  pra.payroll_relationship_id = PPA1.payroll_relationship_id
            AND   EXISTS (
                SELECT
                    1
                FROM
                    pay_run_results prr
                WHERE
                    prr.payroll_rel_action_id = pra.payroll_rel_action_id
            )
            AND   ppa.payroll_action_id = pra.payroll_action_id
            AND   upper(TRIM(ppa.action_type) ) IN (
                upper(TRIM('I') ),
                upper(TRIM('R') ),
                upper(TRIM('Q') )
            ) -- Balance initialization 
			and bal1.PAYROLL_REL_ACTION_ID = pra.payroll_rel_action_id
			
            AND   pra.retro_component_id IS NULL
			AND PDB.DEFINED_BALANCE_ID=	BAL1.DEFBAL_ID1
			AND PDB.BALANCE_DIMENSION_ID=PDU.BALANCE_DIMENSION_ID
			AND PDU.LEGISLATION_CODE='GB'
			 AND   ppa.payroll_id = ptp.payroll_id
    AND   ptp.time_period_id = ppa.earn_time_period_id
    AND   ptp.period_category = 'E'
    AND   trunc( ppa.date_earned ) BETWEEN trunc( ptp.start_date ) AND trunc( ptp.end_date )
		AND PPOS.PERSON_ID=ppa1.PERSON_ID
	 AND   paaf.person_id = ppa1.person_id
    AND   paaf.assignment_id = ppa1.hr_assignment_id
    AND   ( ppa.date_earned ) BETWEEN ( paaf.effective_start_date ) AND ( paaf.effective_end_date )
    AND   upper(TRIM(paaf.assignment_type) ) = upper(TRIM('e') )
    AND   upper(TRIM(paaf.effective_latest_change) ) = upper(TRIM('y') )
 AND PPOS.PERSON_ID=PAAF.PERSON_ID
	AND PPOS.PERIOD_OF_SERVICE_ID=PAAF.PERIOD_OF_SERVICE_ID
	--AND (PPOS.DATE_START)=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)
	/* and (paaf.assignment_number like '%511315%'
	or paaf.assignment_number like '%006786%') */
	AND (PPOS.DATE_START)=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)
		and TO_CHAR(PTP.START_DATE,'MM')='04' 
		
GROUP BY  paaf.person_id,
			ptp.end_date,
			ptp.START_DATE,
			PAAF.ASSIGNMENT_ID,
			paaf.assignment_number
))
group by person_id,
end_date,
start_date,
t_m_days
)
)
SELECT 
	PTP.START_DATE,
(case when ppos.actual_termination_date between ptp.start_date and ptp.end_date then ppos.actual_termination_date else ptp.end_date end) end_date1,

  PPA1.PERSON_ID,
 -- PPA1.HR_ASSIGNMENT_ID, 
            0  ADD_CON,
			 NVL(ROUND(SUM (
               (CASE
                  WHEN     UPPER (TRIM (BAL1.BALANCE_NAME)) IN ('TEACHERS EMPLOYEE CONTRIBUTIONS')
                       AND UPPER (TRIM (PDU.DATABASE_ITEM_SUFFIX)) =
                              UPPER (TRIM ('_ASG_RUN'))
                  THEN
                    BAL1.VALUE1
                  ELSE
                     0
               END)),2),0)
            EMP_CONTRI,
			 NVL(ROUND(
			 SUM (
               (CASE
                  WHEN     UPPER (TRIM (BAL1.BALANCE_NAME)) IN ('TEACHERS EMPLOYER CONTRIBUTIONS')
                       AND UPPER (TRIM (PDU.DATABASE_ITEM_SUFFIX)) =
                              UPPER (TRIM ('_ASG_RUN'))
                  THEN
                    BAL1.VALUE1
                  ELSE
                     0
               END)),2),0)
            ER_CONTRI,
			 ROUND(
			 SUM (
               (CASE
                  WHEN     UPPER (TRIM (BAL1.BALANCE_NAME)) IN ('TEACHERS PENSIONABLE PAY EMPLOYEE')
                       AND UPPER (TRIM (PDU.DATABASE_ITEM_SUFFIX)) =
                              UPPER (TRIM ('_ASG_RUN'))
                  THEN
                    BAL1.VALUE1
                  ELSE
                     0
               END)),2)
            PART_SAL			
			
        FROM
            pay_payroll_rel_actions pra,
            pay_payroll_actions ppa,
            pay_payroll_assignments ppa1, 
			PAY_DEFINED_BALANCES PDB,
			PAY_DIMENSION_USAGES PDU,
			pay_time_periods ptp,
			PER_PERIODS_OF_SERVICE PPOS,
			TABLE ( pay_balance_view_pkg.get_balance_matrix( p_balance_group_usage_id => ( SELECT  bal_grp_usage_id
                                                                                  FROM pay_bal_grp_usages
                                                                                WHERE UPPER(base_group_usage_name) = UPPER('MDC_GROUP'))
                                                        ,p_payroll_rel_action_id  => pra.payroll_rel_action_id
                                                        ,p_payroll_assignment_id => ppa1.payroll_assignment_id)) bal1
		WHERE  pra.payroll_relationship_id = PPA1.payroll_relationship_id
            AND   EXISTS (
                SELECT
                    1
                FROM
                    pay_run_results prr
                WHERE
                    prr.payroll_rel_action_id = pra.payroll_rel_action_id
            )
            AND   ppa.payroll_action_id = pra.payroll_action_id
            AND   upper(TRIM(ppa.action_type) ) IN (
                upper(TRIM('I') ),
                upper(TRIM('R') ),
                upper(TRIM('Q') )
            ) -- Balance initialization 
			and bal1.PAYROLL_REL_ACTION_ID = pra.payroll_rel_action_id
			
            AND   pra.retro_component_id IS NULL
			AND PDB.DEFINED_BALANCE_ID=	BAL1.DEFBAL_ID1
			AND PDB.BALANCE_DIMENSION_ID=PDU.BALANCE_DIMENSION_ID
			AND PDU.LEGISLATION_CODE='GB'
			 AND   ppa.payroll_id = ptp.payroll_id
    AND   ptp.time_period_id = ppa.earn_time_period_id
    AND   ptp.period_category = 'E'
    AND   trunc( ppa.date_earned ) BETWEEN trunc( ptp.start_date ) AND trunc( ptp.end_date )
		AND PPOS.PERSON_ID=ppa1.PERSON_ID
	
	AND (PPOS.DATE_START)=(SELECT MAX(PPOS1.DATE_START) FROM PER_PERIODS_OF_SERVICE PPOS1 WHERE PPOS.PERSON_ID=PPOS1.PERSON_ID)
group by   PTP.START_DATE,
ppos.actual_termination_date,
ptp.end_date,
  PPA1.PERSON_ID
 -- PPA1.HR_ASSIGNMENT_ID